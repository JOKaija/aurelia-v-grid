{"version":3,"sources":["vGrid/v-grid-ctx.js"],"names":["VGridCtx","vGrid","setData","data","vGridConfig","remoteLimit","limit","remoteLength","length","remoteOffset","offset","keepFilterOnCollectionChange","vGridCollection","col","setLoadingOverlay","vGridPager","updatePager","rebuildColumns","vGridGenerator","scrollBottom","collectionLength","getCollectionLength","contentElement","scrollTop","attRowHeight","setScrollTop","newTop","rebuildColumnsRows","columnChangeAndCollection","resetScrollToTop","redrawGrid","showSelectedAndNotSelected","vGridCollectionFiltered","slice","collectionChange","showOnlySelected","newArray","forEach","x","i","vGridSelection","isSelectedMain","push","showOnlyNotSelected","setColumns","paramArray","colConfig","columnLength","getColumns","arr","obj","k","hasOwnProperty","reGenerateColumns","vGridMarkupGenerator","generate","orderBy","sortArray","attLoadingThreshold","loading","setTimeout","vGridSort","reset","sort","setFilter","attribute","asc","event","CustomEvent","detail","bubbles","element","dispatchEvent","eventOnRemoteCall","remoteCall","run","vGridCurrentEntityRef","index","vGridRowKey","vGridCurrentRow","getMaxRows","supportedHeight","testUpTo","navigator","userAgent","toLowerCase","match","div","document","createElement","body","appendChild","test","style","height","clientHeight","removeChild","total","Math","ceil","scrollBottomNext","scrollBottomOnNext","value","getScrollTop","remoteGoToFirst","remoteGoToNext","remoteGoToPage","remoteGoToOffset","remoteGoTofirstPrev","remoteGoTofirstLast","vGridCellHelper","vGridSortable","vGridResizable","vGridFilter","vGridObservables"],"mappings":"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","file":"vGrid/v-grid-ctx.js","sourceRoot":"/source/","sourcesContent":["/*****************************************************************************************************************\r\n *    VGridClientCtx\r\n *    This will contexin all functions that I expose to client side in gridcontext xxxx.ctx\r\n *    Created by vegar ringdal\r\n *\r\n ****************************************************************************************************************/\r\n\r\nexport class VGridCtx {\r\n\r\n  constructor(vGrid) {\r\n    this.vGrid = vGrid;\r\n  }\r\n\r\n  /***************************************************************************************\r\n   * getters/setters to make it easier\r\n   ***************************************************************************************/\r\n\r\n  get vGridSelection() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridSelection;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridConfig() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridConfig;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridCellHelper() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridCellHelper;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridElement() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.element;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridSortable() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridSortable;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridResizable() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridResizable;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  get vGridFilter() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridFilter;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridSort() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridSort;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridObservables() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridObservables;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridGenerator() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridGenerator;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridCurrentEntityRef() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridCurrentEntityRef;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridRowKey() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridRowKey;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridCollectionFiltered() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridCollectionFiltered;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridCollection() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridCollection;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  setData(data) {\r\n    this.vGridConfig.remoteLimit = data.limit || 40;\r\n    this.vGridConfig.remoteLength = data.length || 0;\r\n    this.vGridConfig.remoteOffset = data.offset || 0;\r\n    this.keepFilterOnCollectionChange();\r\n    this.vGrid.vGridCollection = data.col || [];\r\n    this.setLoadingOverlay(false);\r\n    this.vGrid.vGridPager.updatePager({\r\n      limit: this.vGridConfig.remoteLimit,\r\n      offset: this.vGridConfig.remoteOffset,\r\n      length: this.vGridConfig.remoteLength\r\n    });\r\n    \r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  keepFilterOnCollectionChange() {\r\n    this.vGridConfig.keepFilterOnCollectionChange = true;\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  rebuildColumns() {\r\n    this.vGridGenerator.rebuildColumns();\r\n  }\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  scrollBottom() {\r\n    var collectionLength = this.vGridConfig.getCollectionLength();\r\n    this.contentElement.scrollTop = collectionLength * this.vGridConfig.attRowHeight;\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  scrollTop() {\r\n    this.vGridGenerator.contentElement.scrollTop = 0;\r\n  };\r\n\r\n\r\n  setScrollTop(newTop) {\r\n    this.vGridGenerator.contentElement.scrollTop = newTop;\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  rebuildColumnsRows() {\r\n    this.vGridGenerator.rebuildColumnsRows();\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  columnChangeAndCollection(resetScrollToTop) {\r\n    this.vGridGenerator.columnChangeAndCollection(resetScrollToTop);\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  redrawGrid() {\r\n    this.vGridGenerator.redrawGrid();\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  showSelectedAndNotSelected() {\r\n    this.vGrid.vGridCollectionFiltered = this.vGrid.vGridCollection.slice(0);\r\n    this.vGridGenerator.collectionChange();\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  showOnlySelected() {\r\n    let newArray = [];\r\n    this.vGridCollection.forEach((x, i)=> {\r\n      if(this.vGridSelection.isSelectedMain(i)){\r\n        newArray.push(x)\r\n      }\r\n    });\r\n    this.vGrid.vGridCollectionFiltered = newArray;\r\n    this.vGridGenerator.collectionChange();\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  showOnlyNotSelected() {\r\n    let newArray = [];\r\n    this.vGridCollection.forEach((x, i)=> {\r\n      if(!this.vGridSelection.isSelectedMain(i)){\r\n        newArray.push(x)\r\n      }\r\n    });\r\n    this.vGrid.vGridCollectionFiltered = newArray;\r\n    this.vGridGenerator.collectionChange();\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  setColumns(paramArray) {\r\n    this.vGridConfig.colConfig = paramArray;\r\n    this.vGrid.vGridConfig.columnLength  = paramArray.length\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  getColumns() {\r\n    var arr = [];\r\n    this.vGridConfig.colConfig.forEach((obj)=> {\r\n      let x = {};\r\n      for (var k in obj) {\r\n        if (obj.hasOwnProperty(k)) {\r\n          if (x[k] !== obj[k]) {\r\n            x[k] = obj[k];\r\n          }\r\n        }\r\n      }\r\n      arr.push(x);\r\n    });\r\n    return arr\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  reGenerateColumns(resetScrollToTop) {\r\n    this.vGrid.vGridMarkupGenerator.generate();\r\n    this.vGridGenerator.columnChangeAndCollection(resetScrollToTop);\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  orderBy(sortArray) {\r\n\r\n\r\n    //can we do the sorting?\r\n    if (this.vGrid.vGridCollectionFiltered.length > 0) {\r\n      //set loading screen\r\n      if (this.vGrid.vGridCollection.length > this.vGridConfig.attLoadingThreshold) {\r\n        this.vGrid.loading = true;\r\n      }\r\n\r\n      //set query\r\n      setTimeout(()=> {\r\n\r\n        this.vGrid.vGridSort.reset();\r\n        //set filter\r\n        sortArray.forEach((sort)=>{\r\n          this.vGrid.vGridSort.setFilter({\r\n            attribute: sort.attribute,\r\n            asc: sort.asc\r\n          }, true);\r\n        });\r\n\r\n        let event = new CustomEvent(\"sortIconUpdate\", {\r\n          detail: \"\",\r\n          bubbles: true\r\n        });\r\n        this.vGrid.element.dispatchEvent(event);\r\n\r\n        //if remote call is set\r\n        if (this.vGridConfig.eventOnRemoteCall) {\r\n\r\n          //trigger remote call\r\n          this.vGridConfig.remoteCall();\r\n\r\n        } else {\r\n          //run filter\r\n          this.vGrid.vGridSort.run(this.vGrid.vGridCollectionFiltered);\r\n\r\n          //set new row\r\n          if (this.vGrid.vGridCurrentEntityRef) {\r\n            this.vGrid.vGridCollectionFiltered.forEach((x, index) => {\r\n              if (this.vGrid.vGridCurrentEntityRef[this.vGrid.vGridRowKey] === x[this.vGrid.vGridRowKey]) {\r\n                this.vGrid.vGridCurrentRow = index;\r\n              }\r\n            });\r\n          }\r\n\r\n          //update grid\r\n          this.vGrid.vGridGenerator.collectionChange();\r\n          this.vGrid.loading = false;\r\n        }\r\n\r\n      }, 50);\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  getMaxRows() {\r\n    //https://github.com/mleibman/SlickGrid/blob/bf4705a96c40fea088216034def4d0256a335e65/slick.grid.js\r\n    var supportedHeight = 10000;\r\n    var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 8947840 : 1000000000;\r\n    var div = document.createElement(\"div\");\r\n    //div.style.display = \"none\";\r\n    document.body.appendChild(div);\r\n\r\n    while (true) {\r\n      var test = supportedHeight + 10000;\r\n      div.style.height = test + \"px\";\r\n      if (test > testUpTo || div.clientHeight !== test) {\r\n        break;\r\n      } else {\r\n        supportedHeight = test;\r\n      }\r\n    }\r\n    document.body.removeChild(div);\r\n    var total = Math.ceil(supportedHeight / this.vGridConfig.attRowHeight); //lol\r\n    return total + \", error margin:\" + Math.ceil(10000 / this.vGridConfig.attRowHeight);\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  scrollBottomNext() {\r\n    this.vGridGenerator.scrollBottomOnNext = true;\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  setLoadingOverlay(value) {\r\n    this.vGrid.loading = value === true ? true : false;\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * explain\r\n   ****************************************************************************************************************************/\r\n  getScrollTop() {\r\n    return this.vGridGenerator.contentElement.scrollTop;\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * remote external call for pager\r\n   ****************************************************************************************************************************/\r\n  remoteGoToFirst(){\r\n    this.vGrid.loading = true;\r\n    this.vGridConfig.remoteOffset = 0;\r\n    this.vGridConfig.remoteCall();\r\n  }\r\n\r\n\r\n\r\n  remoteGoToNext(){\r\n    this.vGrid.loading = true;\r\n    this.vGridConfig.remoteOffset = this.vGridConfig.remoteOffset + this.vGridConfig.remoteLimit;\r\n    this.vGridConfig.remoteCall();\r\n  }\r\n\r\n\r\n  remoteGoToPage(x){\r\n    this.vGrid.loading = true;\r\n    this.vGridConfig.remoteOffset = x * this.vGridConfig.remoteLimit;\r\n    this.vGridConfig.remoteCall();\r\n  }\r\n\r\n\r\n  remoteGoToOffset(x){\r\n    this.vGrid.loading = true;\r\n    this.vGridConfig.remoteOffset = x;\r\n    this.vGridConfig.remoteCall();\r\n  }\r\n    \r\n\r\n  remoteGoTofirstPrev(){\r\n    this.vGrid.loading = true;\r\n    this.vGridConfig.remoteOffset = this.vGridConfig.remoteOffset - this.vGridConfig.remoteLimit;\r\n    this.vGridConfig.remoteCall();\r\n  }\r\n\r\n\r\n\r\n  remoteGoTofirstLast(){\r\n    this.vGrid.loading = true;\r\n    this.vGridConfig.remoteOffset = this.vGridConfig.remoteLength-this.vGridConfig.remoteLimit;\r\n    this.vGridConfig.remoteCall();\r\n  }\r\n\r\n\r\n}\r\n"]}