{"version":3,"sources":["vGrid/v-grid-sort.js"],"names":["VGridSort","vGrid","lastSort","curSort","reset","setFilter","sort","add","length","exist","forEach","x","attribute","asc","push","no","getFilter","run","array","thisSort","obj1","obj2","i","result","currentObj","v1","v2","slice"],"mappings":"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","file":"vGrid/v-grid-sort.js","sourceRoot":"/source/","sourcesContent":["/*****************************************************************************************************************\r\n *    vGridInterpolate\r\n *    This just does the sorting with the data the grid gives it\r\n *    Created by vegar ringdal\r\n *\r\n ****************************************************************************************************************/\r\nexport class VGridSort {\r\n\r\n\r\n  /***************************************************************************************\r\n   * constsructor\r\n   ***************************************************************************************/\r\n  constructor(vGrid) {\r\n    this.vGrid = vGrid;\r\n  }\r\n\r\n\r\n  //what they say...\r\n  lastSort = [];\r\n  curSort = [];\r\n\r\n\r\n  /***************************************************************************************\r\n   * resets sort\r\n   ***************************************************************************************/\r\n  reset() {\r\n    this.lastSort = [];\r\n    this.curSort = [];\r\n  }\r\n\r\n\r\n  /***************************************************************************************\r\n   * set the filter\r\n   ***************************************************************************************/\r\n  setFilter(sort, add) {\r\n\r\n    //do we add or is it the first one\r\n    if (add && this.lastSort.length > 0) {\r\n\r\n\r\n      //its adding, so lets get last one\r\n      this.curSort = this.lastSort;\r\n      var exist = false;\r\n\r\n\r\n      //loop to se if it exist from before\r\n      this.curSort.forEach(function (x) {\r\n        if (x.attribute === sort.attribute) {\r\n          exist = true;\r\n          x.asc = x.asc === true ? false : true;\r\n\r\n        }\r\n      });\r\n\r\n\r\n      //if it dont exist we add it, else there isnt anythin else to do for now\r\n      if (!exist) {\r\n        this.curSort.push(sort);\r\n        this.curSort[this.curSort.length - 1].no = this.curSort.length;\r\n      }\r\n      this.lastSort = this.curSort;\r\n\r\n\r\n    } else {\r\n\r\n      //if not adding, just set it\r\n      this.curSort = [sort];\r\n      this.curSort[0].no = 1;\r\n      if (this.lastSort[0]) {\r\n        if (this.lastSort[0].attribute === this.curSort[0].attribute) {\r\n          if (this.lastSort[0].asc === this.curSort[0].asc) {\r\n            this.curSort[0].asc = this.curSort[0].asc === true ? false : true;\r\n          }\r\n        }\r\n      }\r\n      this.lastSort = this.curSort;\r\n\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  /***************************************************************************************\r\n   * returns the filter\r\n   ***************************************************************************************/\r\n  getFilter() {\r\n    return this.curSort;\r\n  }\r\n\r\n\r\n  /***************************************************************************************\r\n   * run the sort\r\n   ***************************************************************************************/\r\n  run(array) {\r\n\r\n\r\n    //super simple for now.. atleast I have som form for sort\r\n    var thisSort = this.getFilter();\r\n\r\n    //this is mix from different sources... from what I can tell it works now\r\n    array.sort(function (obj1, obj2, i) {\r\n      var result = 0;\r\n\r\n      for (var i = 0; i < thisSort.length && result == 0; ++i) {\r\n        //loop until all are sorted\r\n        var currentObj = thisSort[i];\r\n        var v1 = obj1[currentObj.attribute];\r\n        var v2 = obj2[currentObj.attribute];\r\n\r\n        if (v1 !== v2) {\r\n          if (currentObj.asc) {\r\n            //ASC\r\n            if (v1 < v2)\r\n              result = -1;\r\n            else\r\n              result = 1;\r\n          } else {\r\n            //DESC\r\n            if (v1 < v2)\r\n              result = 1;\r\n            else\r\n              result = -1;\r\n\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    });\r\n\r\n    this.lastSort = this.getFilter().slice(0);\r\n\r\n\r\n  }\r\n\r\n}\r\n"]}