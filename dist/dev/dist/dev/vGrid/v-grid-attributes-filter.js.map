{"version":3,"sources":["vGrid/v-grid-attributes-filter.js"],"names":["inject","customAttribute","VGrid","vGridAttributesFilter","Element","element","vGrid","bind","bindingContext","overrideContext","values","value","split","attribute","trim","length","forEach","i","checkParams","filterOn","filterOperator","valueFormater","type","state","undefined","valueConverter","valueConverters","vGridFilter","filterOperatorTableString","getValue","fromView","resetValue","checked","updateFilter","curFilter","filterIndex","filter","index","splice","operator","push","attached","addEventListener","e","detail","placeholder","lastFilter","onkeyup","keyCode","vGridConfig","onFilterRun","style","opacity","onclick","viewResources","lookupFunctions"],"mappings":"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","file":"vGrid/v-grid-attributes-filter.js","sourceRoot":"/source/","sourcesContent":["/*****************************************************************************************************************\r\n *    Attributes for header so users can add to headers to activate filtering\r\n *    Created by vegar ringdal\r\n *\r\n ****************************************************************************************************************/\r\nimport {inject, customAttribute} from 'aurelia-framework';\r\nimport {VGrid} from './v-grid';\r\n\r\n\r\n@customAttribute('v-filter')\r\n@inject(Element, VGrid)\r\nexport class vGridAttributesFilter {\r\n\r\n  constructor(element, vGrid) {\r\n    this.vGrid = vGrid;\r\n    this.element = element;\r\n  }\r\n\r\n\r\n  get valueConverters() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.viewResources.lookupFunctions.valueConverters;\r\n    }\r\n  }\r\n\r\n\r\n  bind(bindingContext, overrideContext) {\r\n    this.bindingContext = bindingContext;\r\n    this.overrideContext = overrideContext;\r\n\r\n    //splitt options\r\n    let values = this.value.split(\"|\");\r\n\r\n    //get attribute\r\n    this.attribute = values[0].trim();\r\n\r\n    //loop values and find out what options are\r\n    if (values.length > 1) {\r\n      values.forEach((value, i)=> {\r\n        if (i !== 0) {\r\n          this.checkParams(value);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.filterOn = this.filterOn || \"onEnterKey\";\r\n    this.filterOperator = this.filterOperator || \"=\";\r\n    this.valueFormater = this.valueFormater || null;\r\n    this.type = this.element.type;\r\n    this.state = 0;\r\n\r\n  }\r\n\r\n\r\n  checkParams(value) {\r\n\r\n    if (value !== undefined && value !== null) {\r\n      value = value.trim();\r\n    }\r\n\r\n    let valueConverter = this.valueConverters(value);\r\n    if (valueConverter) {\r\n      this.valueFormater = valueConverter;\r\n    }\r\n\r\n    let filterOperator = this.vGrid.vGridFilter.filterOperatorTableString[value];\r\n    if (filterOperator) {\r\n      this.filterOperator = value;\r\n    }\r\n\r\n    if (value === \"onKeyDown\") {\r\n      this.filterOn = value;\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  getValue() {\r\n    if (this.type !== \"checkbox\") {\r\n      return this.valueFormater ? this.valueFormater.fromView(this.element.value) : this.element.value;\r\n    } else {\r\n      return this.state ? this.state === 2 ? true : false : \"\";\r\n    }\r\n  }\r\n\r\n\r\n  resetValue() {\r\n    if (this.type !== \"checkbox\") {\r\n      this.element.value = \"\";\r\n    } else {\r\n      this.state = 0;\r\n      this.element.checked = false;\r\n    }\r\n  }\r\n\r\n\r\n  updateFilter(curFilter) {\r\n    var filterIndex = null;\r\n\r\n    //get index of filter\r\n    curFilter.forEach((filter, index)=> {\r\n      if (filter.attribute === this.attribute) {\r\n        filterIndex = index;\r\n      }\r\n    });\r\n\r\n    if (filterIndex !== null) {\r\n\r\n      //we found a filter, lets update\r\n      if (this.getValue() === \"\") {\r\n        curFilter.splice(filterIndex, 1);\r\n      } else {\r\n        curFilter[filterIndex].value = this.getValue();\r\n        curFilter[filterIndex].operator = this.filterOperator;\r\n      }\r\n\r\n    } else {\r\n\r\n      //we didnt find filter, lets add one\r\n      if (this.getValue() !== \"\") {\r\n        curFilter.push({\r\n          attribute: this.attribute,\r\n          operator: this.filterOperator,\r\n          value: this.getValue()\r\n        });\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n  attached() {\r\n\r\n    if (this.attribute) { //if no attibute we do not want to do anything\r\n\r\n      this.vGrid.element.addEventListener(\"filterUpdate\", (e)=> {\r\n        if (e.detail.attribute === this.attribute) {\r\n          this.filterOperator = e.detail.operator;\r\n          this.element.placeholder = this.vGrid.vGridFilter.filterOperatorTableString[this.filterOperator];\r\n          this.updateFilter(this.vGrid.vGridFilter.lastFilter);\r\n        }\r\n      });\r\n\r\n\r\n      this.vGrid.element.addEventListener(\"filterClearCell\", (e)=> {\r\n        if (e.detail.attribute === this.attribute) {\r\n          this.resetValue();\r\n          this.updateFilter(this.vGrid.vGridFilter.lastFilter);\r\n        }\r\n      });\r\n\r\n      this.vGrid.element.addEventListener(\"filterClearAll\", ()=> {\r\n        this.resetValue();\r\n        this.updateFilter(this.vGrid.vGridFilter.lastFilter);\r\n      });\r\n\r\n\r\n      if (this.type !== \"checkbox\") {\r\n\r\n        this.element.placeholder = this.vGrid.vGridFilter.filterOperatorTableString[this.filterOperator];\r\n\r\n\r\n        //add eveent listner\r\n        this.element.onkeyup = (e) => {\r\n          if (e.keyCode === 13) {\r\n\r\n            //if they hit enter we need to get filter, update and run query\r\n            this.updateFilter(this.vGrid.vGridFilter.lastFilter);\r\n            this.vGrid.vGridConfig.onFilterRun(this.vGrid.vGridFilter.lastFilter);\r\n\r\n          } else {\r\n\r\n            //if they hit enter we need to get filter, update\r\n            this.updateFilter(this.vGrid.vGridFilter.lastFilter);\r\n            if (this.filterOn === \"onKeyDown\") {\r\n              this.vGrid.vGridConfig.onFilterRun(this.vGrid.vGridFilter.lastFilter);\r\n            }\r\n          }\r\n        };\r\n\r\n\r\n      } else {\r\n        //set default!\r\n        this.element.style.opacity = 0.3;\r\n        //is checkbox\r\n        this.element.onclick = (e) => {\r\n          switch (this.state) {\r\n            case 0:\r\n              this.state = 2;\r\n              this.element.style.opacity = 1;\r\n              break;\r\n            case 2:\r\n              this.state = 3;\r\n              this.element.style.opacity = 1;\r\n              break;\r\n            default:\r\n              this.element.checked = false;\r\n              this.state = 0;\r\n              this.element.style.opacity = 0.3;\r\n          }\r\n          this.updateFilter(this.vGrid.vGridFilter.lastFilter);\r\n          this.vGrid.vGridConfig.onFilterRun(this.vGrid.vGridFilter.lastFilter);\r\n        }\r\n\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}