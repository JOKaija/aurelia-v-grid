{"version":3,"sources":["vGrid/v-grid-attributes-resize-col.js"],"names":["inject","customAttribute","VGrid","vGridAttributesResizeCol","Element","element","vGrid","vGridConfig","vGridGenerator","resizable","screenX","index","originalWidth","bind","bindingContext","overrideContext","attached","mainCol","nodeName","parentNode","resizeHandle","document","createElement","classList","add","css","resizeHeaderDragHandle","onmousedown","e","appendChild","onmouseup","headerElement","onmouseleave","onmousemove","colConfig","colWidth","parseInt","style","width","rowTemplate","correctRowAndScrollbodyWidth","recreateRowViewSlots","updateGridScrollbars","rebindAllRowSlots","updateHeader","correctHeaderAndScrollbodyWidth","newWidth","attResizableHeadersAndRows","columnsToFix","contentElement","firstChild","querySelectorAll","rowColumn","col","length","getAttribute","started"],"mappings":"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","file":"vGrid/v-grid-attributes-resize-col.js","sourceRoot":"/source/","sourcesContent":["/*****************************************************************************************************************\r\n *    Adds resizing to the columns\r\n *    Can not be used with row repeat... not atleast yet..\r\n *    Created by vegar ringdal\r\n *\r\n ****************************************************************************************************************/\r\nimport {inject, customAttribute} from 'aurelia-framework';\r\nimport {VGrid} from './v-grid';\r\n\r\n\r\n@customAttribute('v-resize-col')\r\n@inject(Element, VGrid)\r\nexport class vGridAttributesResizeCol {\r\n\r\n\r\n  constructor(element, vGrid) {\r\n    this.vGrid = vGrid;\r\n    this.vGridConfig = this.vGrid.vGridConfig;\r\n    this.vGridGenerator = this.vGrid.vGridGenerator;\r\n    this.element = element;\r\n    this.resizable = false;\r\n    this.screenX;\r\n    this.index;\r\n    this.originalWidth;\r\n\r\n  }\r\n\r\n\r\n  bind(bindingContext, overrideContext) {\r\n    this.bindingContext = bindingContext;\r\n    this.overrideContext = overrideContext;\r\n\r\n  }\r\n\r\n\r\n  attached() {\r\n\r\n    //get the column element\r\n    let mainCol = this.element;\r\n    while (mainCol.nodeName !== 'V-GRID-HEADER-COL') {\r\n      mainCol = mainCol.parentNode;\r\n    }\r\n    this.mainCol = mainCol;\r\n\r\n    //add resize handle\r\n    var resizeHandle = document.createElement(\"DIV\");\r\n    resizeHandle.classList.add(this.vGridConfig.css.resizeHeaderDragHandle);\r\n\r\n    //register onmouse doen event\r\n    resizeHandle.onmousedown = (e) => {\r\n      this.onmousedown(e);\r\n    };\r\n\r\n    //add\r\n    this.mainCol.appendChild(resizeHandle);\r\n\r\n  }\r\n\r\n  /**************************************************\r\n   *  when mouse button is let go\r\n   **************************************************/\r\n  onmouseup() {\r\n\r\n    //set state\r\n    this.resizable = true;\r\n\r\n    //remove events\r\n    this.vGridGenerator.headerElement.onmouseleave = \"\";\r\n    this.vGridGenerator.headerElement.onmousemove = \"\";\r\n    this.vGridGenerator.headerElement.onmouseup = \"\";\r\n\r\n    //update this column width\r\n    this.vGridConfig.colConfig[this.index].colWidth = parseInt(this.mainCol.style.width);\r\n\r\n    //reset template and fill data\r\n    this.vGridGenerator.rowTemplate = null;\r\n    this.vGridGenerator.correctRowAndScrollbodyWidth();\r\n    this.vGridGenerator.recreateRowViewSlots();\r\n    this.vGridGenerator.updateGridScrollbars();\r\n    this.vGridGenerator.rebindAllRowSlots(true);\r\n\r\n  }\r\n\r\n\r\n  /**************************************************\r\n   *  when mouse moving mouse\r\n   **************************************************/\r\n  onmousemove(e) {\r\n\r\n    //get when user let go of mouse button\r\n    this.vGridGenerator.headerElement.onmouseup = () => {\r\n      this.onmouseup();\r\n    };\r\n\r\n    //if mouse leaves header we want to stop, else it just gets buggy\r\n    this.vGridGenerator.headerElement.onmouseleave = (e) => {\r\n      this.vGridGenerator.headerElement.onmouseup(e);\r\n    };\r\n\r\n    //update\r\n    if (this.resizable) {\r\n      this.updateHeader(e);\r\n    } else {\r\n      this.vGridGenerator.correctHeaderAndScrollbodyWidth();\r\n    }\r\n  }\r\n\r\n\r\n  /**************************************************\r\n   *  updates the actual header/row column width\r\n   **************************************************/\r\n  updateHeader(e) {\r\n\r\n    //updates\r\n    var newWidth = parseInt(this.originalWidth) - ((this.screenX - e.screenX)) + \"px\";\r\n    if (parseInt(newWidth) > 15) {\r\n      this.vGridConfig.colConfig[this.index].colWidth = parseInt(newWidth);\r\n      this.mainCol.style.width = parseInt(this.originalWidth) - ((this.screenX - e.screenX)) + \"px\";\r\n      this.mainCol.style.width = parseInt(this.originalWidth) - ((this.screenX - e.screenX)) + \"px\";\r\n\r\n      //if resize also row attribute is set to true, then we also need to update them\r\n      if (this.vGridConfig.attResizableHeadersAndRows) {\r\n\r\n        //get the columns of the row\r\n        var columnsToFix = this.vGridGenerator.contentElement.firstChild.querySelectorAll(\".\" + this.vGridConfig.css.rowColumn + this.index);\r\n\r\n        //loop the columns and update each row\r\n        for (var col = 0; col < columnsToFix.length; col++) {\r\n          columnsToFix[col].style.width = newWidth;\r\n        }\r\n\r\n        //update scrollbars and row widths\r\n        this.vGridGenerator.correctRowAndScrollbodyWidth();\r\n        this.vGridGenerator.updateGridScrollbars();\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**************************************************\r\n   *  when mouse down, resizing starts\r\n   **************************************************/\r\n  onmousedown(e) {\r\n    //set state\r\n    this.resizable = true;\r\n\r\n    //get som vars\r\n    this.screenX = e.screenX;\r\n    this.originalWidth = this.mainCol.style.width;\r\n    this.index = this.mainCol.getAttribute(\"column-no\");\r\n    this.started = false;\r\n\r\n\r\n    //add mouse move event\r\n    this.vGridGenerator.headerElement.onmousemove = (e) => {\r\n      this.started = true;\r\n      this.onmousemove(e);\r\n    };\r\n\r\n\r\n    //incase they just release right away\r\n    this.vGridGenerator.headerElement.onmouseup = () => {\r\n      if (!this.started) {\r\n        this.vGridGenerator.headerElement.onmousemove = \"\";\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n\r\n}\r\n"]}