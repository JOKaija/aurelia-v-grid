{"version":3,"sources":["vGrid/v-grid-attributes-resize-col.js"],"names":[],"mappings":"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","file":"vGrid/v-grid-attributes-resize-col.js","sourceRoot":"/source/","sourcesContent":["/*****************************************************************************************************************\r\n *    Adds resizing to the columns\r\n *    Can not be used with row repeat... not atleast yet..\r\n *    Created by vegar ringdal\r\n *\r\n ****************************************************************************************************************/\r\nimport {inject, customAttribute} from 'aurelia-framework';\r\nimport {VGrid} from './v-grid';\r\n\r\n\r\n@customAttribute('v-resize-col')\r\n@inject(Element, VGrid)\r\nexport class vGridAttributesResizeCol {\r\n\r\n\r\n  constructor(element, vGrid) {\r\n    this.vGrid = vGrid;\r\n    this.vGridConfig = this.vGrid.vGridConfig;\r\n    this.vGridGenerator = this.vGrid.vGridGenerator;\r\n    this.element = element;\r\n    this.resizable = false;\r\n    this.screenX;\r\n    this.index;\r\n    this.originalWidth;\r\n\r\n  }\r\n\r\n\r\n  bind(bindingContext, overrideContext) {\r\n    this.bindingContext = bindingContext;\r\n    this.overrideContext = overrideContext;\r\n\r\n  }\r\n\r\n\r\n  attached() {\r\n\r\n    //get the column element\r\n    let mainCol = this.element;\r\n    while (mainCol.nodeName !== 'V-GRID-HEADER-COL') {\r\n      mainCol = mainCol.parentNode;\r\n    }\r\n    this.mainCol = mainCol;\r\n\r\n    //add resize handle\r\n    var resizeHandle = document.createElement(\"DIV\");\r\n    resizeHandle.classList.add(this.vGridConfig.css.resizeHeaderDragHandle);\r\n\r\n    //register onmouse doen event\r\n    resizeHandle.onmousedown = (e) => {\r\n      this.onmousedown(e);\r\n    };\r\n\r\n    //add\r\n    this.mainCol.appendChild(resizeHandle);\r\n\r\n  }\r\n\r\n  /**************************************************\r\n   *  when mouse button is let go\r\n   **************************************************/\r\n  onmouseup() {\r\n\r\n    //set state\r\n    this.resizable = true;\r\n\r\n    //remove events\r\n    this.vGridGenerator.headerElement.onmouseleave = \"\";\r\n    this.vGridGenerator.headerElement.onmousemove = \"\";\r\n    this.vGridGenerator.headerElement.onmouseup = \"\";\r\n\r\n    //update this column width\r\n    this.vGridConfig.colConfig[this.index].colWidth = parseInt(this.mainCol.style.width);\r\n\r\n    //reset template and fill data\r\n    this.vGridGenerator.rowTemplate = null;\r\n    this.vGridGenerator.correctRowAndScrollbodyWidth();\r\n    this.vGridGenerator.recreateRowViewSlots();\r\n    this.vGridGenerator.updateGridScrollbars();\r\n    this.vGridGenerator.rebindAllRowSlots(true);\r\n\r\n  }\r\n\r\n\r\n  /**************************************************\r\n   *  when mouse moving mouse\r\n   **************************************************/\r\n  onmousemove(e) {\r\n\r\n    //get when user let go of mouse button\r\n    this.vGridGenerator.headerElement.onmouseup = () => {\r\n      this.onmouseup();\r\n    };\r\n\r\n    //if mouse leaves header we want to stop, else it just gets buggy\r\n    this.vGridGenerator.headerElement.onmouseleave = (e) => {\r\n      this.vGridGenerator.headerElement.onmouseup(e);\r\n    };\r\n\r\n    //update\r\n    if (this.resizable) {\r\n      this.updateHeader(e);\r\n    } else {\r\n      this.vGridGenerator.correctHeaderAndScrollbodyWidth();\r\n    }\r\n  }\r\n\r\n\r\n  /**************************************************\r\n   *  updates the actual header/row column width\r\n   **************************************************/\r\n  updateHeader(e) {\r\n\r\n    //updates\r\n    var newWidth = parseInt(this.originalWidth) - ((this.screenX - e.screenX)) + \"px\";\r\n    if (parseInt(newWidth) > 15) {\r\n      this.vGridConfig.colConfig[this.index].colWidth = parseInt(newWidth);\r\n      this.mainCol.style.width = parseInt(this.originalWidth) - ((this.screenX - e.screenX)) + \"px\";\r\n      this.mainCol.style.width = parseInt(this.originalWidth) - ((this.screenX - e.screenX)) + \"px\";\r\n\r\n      //if resize also row attribute is set to true, then we also need to update them\r\n      if (this.vGridConfig.attResizableHeadersAndRows) {\r\n\r\n        //get the columns of the row\r\n        var columnsToFix = this.vGridGenerator.contentElement.firstChild.querySelectorAll(\".\" + this.vGridConfig.css.rowColumn + this.index);\r\n\r\n        //loop the columns and update each row\r\n        for (var col = 0; col < columnsToFix.length; col++) {\r\n          columnsToFix[col].style.width = newWidth;\r\n        }\r\n\r\n        //update scrollbars and row widths\r\n        this.vGridGenerator.correctRowAndScrollbodyWidth();\r\n        this.vGridGenerator.updateGridScrollbars();\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**************************************************\r\n   *  when mouse down, resizing starts\r\n   **************************************************/\r\n  onmousedown(e) {\r\n    //set state\r\n    this.resizable = true;\r\n\r\n    //get som vars\r\n    this.screenX = e.screenX;\r\n    this.originalWidth = this.mainCol.style.width;\r\n    this.index = this.mainCol.getAttribute(\"column-no\");\r\n    this.started = false;\r\n\r\n\r\n    //add mouse move event\r\n    this.vGridGenerator.headerElement.onmousemove = (e) => {\r\n      this.started = true;\r\n      this.onmousemove(e);\r\n    };\r\n\r\n\r\n    //incase they just release right away\r\n    this.vGridGenerator.headerElement.onmouseup = () => {\r\n      if (!this.started) {\r\n        this.vGridGenerator.headerElement.onmousemove = \"\";\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n\r\n}\r\n"]}