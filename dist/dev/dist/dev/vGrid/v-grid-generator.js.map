{"version":3,"sources":["vGrid/v-grid-generator.js"],"names":["ViewSlot","VGridGenerator","vGrid","contentHeight","gridHeight","gridWidth","scrollBodyHeight","scrollBottomOnNext","gridElement","headerElement","headerScrollElement","contentElement","footerElement","rowElementArray","contentScrollBodyElement","rowViewFactory","loadingScreenViewSlot","headerViewSlot","footerViewSlot","init","isRebuild","addHtml","addRowsAndSlots","addEvents","vGridSelection","setMode","vGridConfig","attMultiSelect","listenForWindowResize","updateGridScrollbars","rebindAllRowSlots","setLargeScrollLimit","sendCollectionEvent","createGridElement","createGridHeaderElement","createGridContentElement","createGridFooterElement","createGridScrollBodyElement","createGridRowElements","createLoadingScreenViewSlot","createHeaderViewSlot","createRowViewSlots","eventOnRemoteCall","createFooterViewSlot","i","getRowCacheLength","rowElement","div","addEventListener","e","currentRow","parseInt","currentTarget","getAttribute","clickHandler","undefined","highlight","attRequestAnimationFrame","requestAnimationFrame","vGridScrollEvents","scrollEventHandler","scrollLeft","lastScrollLeft","x","document","createElement","vGridElement","appendChild","style","display","classList","add","css","wrapper","position","height","width","clientHeight","gridWidght","clientWidth","header","mainHeader","attHeaderHeight","innerHTML","row","rowHeader","repeater","getTotalColumnWidth","gridWrapperHeight","headerAndFooterHeight","attFooterHeight","mainContent","mainFooter","setScrollBodyHeightToVar","scrollBody","minimumRowsNeeded","attRowHeight","top","rowAlt","rowEven","setRowTopValue","push","loadingScreentHtml","viewFactory","viewCompiler","compile","join","viewResources","view","create","container","bind","bindingContext","parentOverrideContext","overrideContext","attached","getHeaderViewFactory","rows","length","getRowViewFactory","viewSlot","pagerElement","attCustomPager","updateRowBinding","rebindRowNumber","rowno","updateSelectionOnAllRows","isSelected","rowSelected","remove","rowTemplate","repeatRowHeaderTemplate","columnLength","colConfig","colWidth","elementClass","rowHeaderColumn","template","colHeaderTemplate","repeatRowTemplate","rowColumn","colRowTemplate","total","rowArray","elementNo","topValue","transform","rebuildGridHeaderHtmlAndViewSlot","unbindDetachHeaderViewSlots","removeChild","collectionLength","getCollectionLength","correctRowAndScrollbodyWidth","correctHeaderAndScrollbodyWidth","hideRowsThatIsLargerThanCollection","lastScrollTop","rowTop","sort","a","b","collectionHeight","bodyHeight","offsetHeight","scrollTop","overflow","overflowY","overflowX","offsetWidth","largeScrollLimit","unbindDetachRowViewSlots","unbind","detached","removeAll","unbindDetachFooterViewSlots","unbindDetachLoadingScreenViewSlots","unbindDetachViewSlots","recreateRowViewSlots","redrawGrid","getElementsByClassName","fixHeaderWithBody","currentScrollLeft","rebuildColumns","rebuildColumnsRows","columnChangeAndCollection","resetScrollToTop","collectionChange","scrollBottom","reset","contentRows","scrollOffsetHeight","onLargeScroll","window","last","onScrollbarScrolling","vGridCellHelper","element","vGridResizable"],"mappings":"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","file":"vGrid/v-grid-generator.js","sourceRoot":"/source/","sourcesContent":["/*****************************************************************************************************************\r\n *    vGridGenerator\r\n *    This generates all html and adds the main events\r\n *    Created by vegar ringdal\r\n *\r\n ****************************************************************************************************************/\r\nimport {ViewSlot} from 'aurelia-framework';\r\n\r\nexport class VGridGenerator {\r\n\r\n  constructor(vGrid) {\r\n    this.vGrid = vGrid;\r\n  }\r\n\r\n  /***************************************************************************************\r\n   * getters/setters to make it easier\r\n   ***************************************************************************************/\r\n\r\n  get vGridSelection() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridSelection;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridConfig() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridConfig;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridCellHelper() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridCellHelper;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridElement() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.element;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  get vGridResizable() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridResizable;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  get vGridScrollEvents() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridScrollEvents;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  /*************************************************************************************\r\n   * internal vars\r\n   *************************************************************************************/\r\n\r\n  contentHeight = 0;\r\n  gridHeight = 0;\r\n  gridWidth = 0;\r\n  scrollBodyHeight = 0;\r\n  scrollBottomOnNext = false;\r\n\r\n  //cache\r\n  gridElement = null;\r\n  headerElement = null;\r\n  headerScrollElement = null;\r\n  contentElement = null;\r\n  footerElement = null;\r\n  rowElementArray = []; //this contains top, viewslots and \"div\" is the html element\r\n  contentScrollBodyElement = null;\r\n\r\n  //viewPorts\r\n  rowViewFactory = null;\r\n  loadingScreenViewSlot = null;\r\n  headerViewSlot = null;\r\n  footerViewSlot = null;\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * will create the actual grid (cant be constructor since I call this when rebuilding)\r\n   ****************************************************************************************************************************/\r\n  init(isRebuild) {\r\n\r\n    this.addHtml();\r\n    this.addRowsAndSlots();\r\n    this.addEvents();\r\n    if (!isRebuild) {\r\n      this.vGridSelection.setMode(this.vGridConfig.attMultiSelect);\r\n      this.listenForWindowResize();\r\n    }\r\n\r\n    this.updateGridScrollbars();\r\n    this.rebindAllRowSlots();\r\n    this.setLargeScrollLimit();\r\n\r\n    this.vGrid.sendCollectionEvent();\r\n\r\n\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * add the html\r\n   ****************************************************************************************************************************/\r\n  addHtml() {\r\n    //html elements\r\n    this.createGridElement();\r\n    this.createGridHeaderElement();\r\n    this.createGridContentElement();\r\n    this.createGridFooterElement();\r\n    this.createGridScrollBodyElement();\r\n    this.createGridRowElements();\r\n\r\n  }\r\n\r\n  /****************************************************************************************************************************\r\n   * add the viewslots\r\n   ****************************************************************************************************************************/\r\n  addRowsAndSlots() {\r\n\r\n    this.createLoadingScreenViewSlot();\r\n    this.createHeaderViewSlot();\r\n    this.createRowViewSlots();\r\n    if (this.vGridConfig.eventOnRemoteCall) {\r\n      this.createFooterViewSlot()\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * add the events  (this is called during rebuild etc\r\n   ****************************************************************************************************************************/\r\n  addEvents() {\r\n    //add all click events to rows\r\n    for (var i = 0; i < this.getRowCacheLength(); i++) {\r\n      var rowElement = this.rowElementArray[i].div;\r\n\r\n      rowElement.addEventListener(\"dblclick\", (e) => {\r\n        var currentRow = parseInt(e.currentTarget.getAttribute(\"row\"));\r\n        this.vGridConfig.clickHandler(e, currentRow);\r\n      }, false);\r\n\r\n      rowElement.addEventListener(\"click\", (e) => {\r\n        var currentRow = parseInt(e.currentTarget.getAttribute(\"row\"));\r\n        this.vGridConfig.clickHandler(e, currentRow);\r\n        if (this.vGridConfig.attMultiSelect !== undefined) {\r\n          this.vGridSelection.highlight(e, currentRow, this);\r\n        }\r\n      }, false);\r\n\r\n    }\r\n\r\n    //this have to be after clcik since it will cancel if scroll event\r\n    this.contentElement.addEventListener(\"scroll\", (e)=> {\r\n      if (this.vGridConfig.attRequestAnimationFrame) {\r\n        requestAnimationFrame(() => {\r\n          this.vGridScrollEvents.scrollEventHandler();\r\n        });\r\n      } else {\r\n        this.vGridScrollEvents.scrollEventHandler();\r\n      }\r\n    });\r\n\r\n    //fix bug when tabbing headers, and header is larger then content width\r\n    this.headerElement.addEventListener(\"scroll\", (e)=> {\r\n      this.contentElement.scrollLeft = this.headerElement.scrollLeft;\r\n      this.vGridScrollEvents.lastScrollLeft = this.headerElement.scrollLeft;\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * gets the main div to create grid in\r\n   ****************************************************************************************************************************/\r\n  createGridElement() {\r\n\r\n    var x = document.createElement(\"DIV\"); //create this a container for my 3 rows\r\n    this.vGridElement.appendChild(x);\r\n    this.vGridElement.style.display = \"block\"; //this was the issue for all my problems\r\n    this.gridElement = x;\r\n\r\n    //do this for I know very little about css, and doing it like this I didnt get those weird side effects\r\n    //todo look at this again, do not like what Ive done here\r\n    this.gridElement.classList.add(this.vGridConfig.css.wrapper);\r\n    this.gridElement.style.position = \"relative\";\r\n    this.gridElement.style.height = '100%';\r\n    this.gridElement.style.width = \"100%\";\r\n\r\n    //get default height and width\r\n    this.gridHeight = this.gridElement.clientHeight;\r\n    this.gridWidght = this.gridElement.clientWidth;\r\n\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * add header div\r\n   ****************************************************************************************************************************/\r\n  createGridHeaderElement() {\r\n    //create and append header div\r\n    var header = document.createElement(\"DIV\");\r\n    header.classList.add(this.vGridConfig.css.mainHeader);\r\n    header.style.height = this.vGridConfig.attHeaderHeight + \"px\";\r\n    if (!this.headerElement) {\r\n      this.gridElement.appendChild(header);\r\n      this.headerElement = header;\r\n    } else {\r\n      this.headerElement.innerHTML = header.innerHTML;\r\n    }\r\n    this.headerScrollElement = document.createElement(\"DIV\");\r\n    this.headerScrollElement.classList.add(this.vGridConfig.css.row);\r\n    this.headerScrollElement.classList.add(this.vGridConfig.css.rowHeader);\r\n    this.headerScrollElement.style.height = this.vGridConfig.attHeaderHeight + \"px\";\r\n    this.headerScrollElement.style.width = this.vGrid.vGridConfig.repeater ? \"100%\" : this.getTotalColumnWidth() + \"px\";\r\n    this.headerElement.appendChild(this.headerScrollElement);\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * add content div\r\n   ****************************************************************************************************************************/\r\n  createGridContentElement() {\r\n\r\n    //calculate content height\r\n    var gridWrapperHeight = this.gridHeight;\r\n    var headerAndFooterHeight = this.vGridConfig.attHeaderHeight + this.vGridConfig.attFooterHeight;\r\n    this.contentHeight = gridWrapperHeight - headerAndFooterHeight;\r\n\r\n    //create and append content div\r\n    this.contentElement = document.createElement(\"DIV\");\r\n    this.contentElement.classList.add(this.vGridConfig.css.mainContent);\r\n    this.contentElement.style.height = this.contentHeight + \"px\";\r\n    this.gridElement.appendChild(this.contentElement);\r\n\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * adds the footer\r\n   ****************************************************************************************************************************/\r\n  createGridFooterElement() {\r\n    //create and append\r\n    this.footerElement = document.createElement(\"DIV\");\r\n    this.footerElement.classList.add(this.vGridConfig.css.mainFooter);\r\n    this.footerElement.style.height = this.vGridConfig.attFooterHeight + \"px\";\r\n    this.gridElement.appendChild(this.footerElement);\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * add the scroll body\r\n   ****************************************************************************************************************************/\r\n  createGridScrollBodyElement() {\r\n    this.setScrollBodyHeightToVar();\r\n    //create and append\r\n    this.contentScrollBodyElement = document.createElement(\"DIV\");\r\n    this.contentScrollBodyElement.classList.add(this.vGridConfig.css.scrollBody);\r\n    this.contentScrollBodyElement.style.height = this.scrollBodyHeight + \"px\";\r\n    this.contentScrollBodyElement.style.width = this.vGrid.vGridConfig.repeater ? \"100%\" : this.getTotalColumnWidth() + \"px\";\r\n    this.contentElement.appendChild(this.contentScrollBodyElement);\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * add the rows to scroll div\r\n   ****************************************************************************************************************************/\r\n  createGridRowElements() {\r\n    //rows we need to fill up visible container\r\n    var minimumRowsNeeded = parseInt(this.contentHeight / this.vGridConfig.attRowHeight, 10);\r\n\r\n    //if this happends then they have done something really wring, or want to display all, lets make 100. (should really not happend)\r\n    if (0 > this.contentHeight) {\r\n      minimumRowsNeeded = 100;\r\n    }\r\n\r\n    //set extra so we can buffer\r\n    if (minimumRowsNeeded % 2 === 1) {\r\n      minimumRowsNeeded = minimumRowsNeeded + 7;\r\n    } else {\r\n      minimumRowsNeeded = minimumRowsNeeded + 6;\r\n    }\r\n\r\n    this.minimumRowsNeeded = minimumRowsNeeded;\r\n\r\n    var top = 0;\r\n    for (var i = 0; i < minimumRowsNeeded; i++) {\r\n\r\n      var row = document.createElement(\"DIV\");\r\n      //add row css\r\n      row.classList.add(this.vGridConfig.css.row);\r\n      //add alt/even css\r\n      if (i % 2 === 1) {\r\n        row.classList.add(this.vGridConfig.css.rowAlt);\r\n      } else {\r\n        row.classList.add(this.vGridConfig.css.rowEven);\r\n      }\r\n\r\n      row.style.height = this.vGridConfig.attRowHeight + \"px\";\r\n\r\n      this.setRowTopValue([{\r\n        div: row,\r\n        top: 0\r\n      }], 0, top);\r\n\r\n      row.style[\"min-width\"] = this.getTotalColumnWidth() + \"px\";\r\n      row.style.width = \"100%\";\r\n\r\n      //inner magic\r\n      row.innerHTML = \"\"; //? why Im I doing this? todo test... why\r\n\r\n      //add to scroll body\r\n      this.contentScrollBodyElement.appendChild(row);\r\n\r\n      //push into our html cache for later use when scrolling\r\n      //own for top so we get it faster\r\n      this.rowElementArray.push({\r\n        div: row,\r\n        top: top\r\n      });\r\n\r\n      //set new top for next row\r\n      top = top + this.vGridConfig.attRowHeight;\r\n\r\n    }//end for loop\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * creates loading screen\r\n   ****************************************************************************************************************************/\r\n  createLoadingScreenViewSlot() {\r\n\r\n    var loadingScreentHtml = [\r\n      '<div class=\"v-grid-overlay\" if.bind=\"loading\">',\r\n      '</div>',\r\n      '<div if.two-way=\"loading\" class=\"v-grid-progress-indicator\">',\r\n      '<div class=\"v-grid-progress-bar\" role=\"progressbar\" style=\"width:100%\">',\r\n      '<span>${ loadingMessage }</span>',\r\n      '</div>',\r\n      '</div>'\r\n    ];\r\n    var viewFactory = this.vGrid.viewCompiler.compile('<template>' + loadingScreentHtml.join(\"\") + '</template>', this.vGrid.viewResources);\r\n    var view = viewFactory.create(this.vGrid.container);\r\n    this.loadingScreenViewSlot = new ViewSlot(this.gridElement, true);\r\n    this.loadingScreenViewSlot.add(view);\r\n    //bind\r\n    this.loadingScreenViewSlot.bind(this.vGrid, {\r\n      bindingContext: this.vGrid,\r\n      parentOverrideContext: this.vGrid.overrideContext\r\n    });\r\n    this.loadingScreenViewSlot.attached();\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * creates the header viewslot\r\n   ****************************************************************************************************************************/\r\n  createHeaderViewSlot() {\r\n    var viewFactory = this.getHeaderViewFactory();\r\n    var view = viewFactory.create(this.vGrid.container);\r\n    this.headerViewSlot = new ViewSlot(this.headerScrollElement, true);\r\n    this.headerViewSlot.add(view);\r\n    //bind\r\n    let bindingContext = {};\r\n    this.headerViewSlot.bind(bindingContext, {\r\n      bindingContext: bindingContext,\r\n      parentOverrideContext: this.vGrid.overrideContext\r\n    });\r\n    this.headerViewSlot.attached();\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * creates the row viewslots\r\n   ****************************************************************************************************************************/\r\n  createRowViewSlots() {\r\n    var rows = this.rowElementArray;\r\n    for (var i = 0; i < rows.length; i++) {\r\n      var viewFactory = this.getRowViewFactory();\r\n      var view = viewFactory.create(this.vGrid.container);\r\n      rows[i].viewSlot = new ViewSlot(rows[i].div, true);\r\n      rows[i].viewSlot.add(view);\r\n      let bindingContext = {};\r\n      rows[i].viewSlot.bind(bindingContext, {\r\n        bindingContext: bindingContext,\r\n        parentOverrideContext: this.vGrid.overrideContext\r\n      });\r\n      rows[i].viewSlot.attached();\r\n    }\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * creates the footer viewslots\r\n   ****************************************************************************************************************************/\r\n  createFooterViewSlot() {\r\n    var pagerElement = this.vGridConfig.attCustomPager || '<v-grid-pager></v-grid-pager>';\r\n    var viewFactory = this.vGrid.viewCompiler.compile(`<template>${pagerElement}</template>`, this.vGrid.viewResources);\r\n    var view = viewFactory.create(this.vGrid.container);\r\n\r\n    this.footerViewSlot = new ViewSlot(this.footerElement, true);\r\n    this.footerViewSlot.add(view);\r\n\r\n    this.footerViewSlot.bind(this, {\r\n      bindingContext: this,\r\n      parentOverrideContext: this.vGrid.overrideContext\r\n    });\r\n\r\n    this.footerViewSlot.attached();\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * fills data into rows (all)\r\n   ****************************************************************************************************************************/\r\n  rebindAllRowSlots() {\r\n    for (var i = 0; i < this.getRowCacheLength(); i++) {\r\n      var currentRow = this.rowElementArray[i].top / this.vGridConfig.attRowHeight;\r\n      var row = this.rowElementArray[i];\r\n      this.vGridConfig.updateRowBinding(currentRow, row, true, true);\r\n    }\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * fills data into row, 1 row!\r\n   ****************************************************************************************************************************/\r\n  rebindRowNumber(rowno) {\r\n    for (var i = 0; i < this.getRowCacheLength(); i++) {\r\n      var currentRow = this.rowElementArray[i].top / this.vGridConfig.attRowHeight;\r\n      if (rowno === currentRow) {\r\n        var row = this.rowElementArray[i];\r\n        this.vGridConfig.updateRowBinding(currentRow, row, true, true);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * updates only selection on rows\r\n   ****************************************************************************************************************************/\r\n  updateSelectionOnAllRows() {\r\n    var i;\r\n    for (i = 0; i < this.getRowCacheLength(); i++) {\r\n      var currentRow = this.rowElementArray[i].top / this.vGridConfig.attRowHeight;\r\n      if (this.vGridSelection.isSelected(currentRow)) {\r\n        this.rowElementArray[i].div.classList.add(this.vGridConfig.css.rowSelected);\r\n      } else {\r\n        this.rowElementArray[i].div.classList.remove(this.vGridConfig.css.rowSelected);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * returns header template\r\n   ****************************************************************************************************************************/\r\n  getHeaderViewFactory() {\r\n    var rowTemplate = \"\";\r\n    if (this.vGrid.vGridConfig.repeater) {\r\n      rowTemplate = this.vGrid.vGridConfig.repeatRowHeaderTemplate;\r\n    } else {\r\n      for (var i = 0; i < this.vGridConfig.columnLength; i++) {\r\n\r\n        var style = `style=\"width:${this.vGridConfig.colConfig[i].colWidth}px\"`;\r\n        var elementClass = `class=\"${this.vGridConfig.css.rowHeaderColumn + i}\"`;\r\n        var template = this.vGridConfig.colConfig[i].colHeaderTemplate;\r\n\r\n        rowTemplate = rowTemplate + `<v-grid-header-col ${style} ${elementClass} column-no=\"${i}\">${template}</v-grid-header-col>`;\r\n      }\r\n    }\r\n    var viewFactory = this.vGrid.viewCompiler.compile(`<template>${rowTemplate}</template>`, this.vGrid.viewResources);\r\n    return viewFactory;\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * returns row viewFactory, if it does not exist it creates it\r\n   ****************************************************************************************************************************/\r\n  getRowViewFactory() {\r\n    var viewFactory;\r\n\r\n    if (this.rowViewFactory !== null) {\r\n      viewFactory = this.rowViewFactory;\r\n    } else {\r\n      var rowTemplate = \"\";\r\n      if (this.vGrid.vGridConfig.repeater) {\r\n        rowTemplate = '<template>' + this.vGridConfig.repeatRowTemplate + '</template>'\r\n      } else {\r\n        rowTemplate = '<template>';\r\n        for (var i = 0; i < this.vGridConfig.columnLength; i++) {\r\n\r\n          var style = `style=\"width:${this.vGridConfig.colConfig[i].colWidth}px\"`;\r\n          var elementClass = `class=\"${this.vGridConfig.css.rowColumn + i}\"`;\r\n          var template = this.vGridConfig.colConfig[i].colRowTemplate;\r\n\r\n          rowTemplate = rowTemplate + `<v-grid-row-col ${style} ${elementClass} column-no=${i}>${template}</v-grid-row-col>`;\r\n        }\r\n        rowTemplate + '</template>';\r\n      }\r\n      viewFactory = this.vGrid.viewCompiler.compile(rowTemplate, this.vGrid.viewResources);\r\n    }\r\n\r\n    //cache template\r\n    this.rowViewFactory = viewFactory;\r\n\r\n    //return cache;\r\n    return this.rowViewFactory\r\n\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * get total column width\r\n   ****************************************************************************************************************************/\r\n  getTotalColumnWidth() {\r\n    var total = 0;\r\n    for (var i = 0; i < this.vGridConfig.columnLength; i++) {\r\n      total = total + parseInt(this.vGridConfig.colConfig[i].colWidth, 10);\r\n    }\r\n    return total;\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * gets the row cache length...\r\n   ****************************************************************************************************************************/\r\n  getRowCacheLength() {\r\n    return this.rowElementArray.length;\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * set top value, here I could have failback to TOP instead of translate 3d\r\n   ****************************************************************************************************************************/\r\n  setRowTopValue(rowArray, elementNo, topValue) {\r\n    rowArray[elementNo].div.style.transform = `translate3d(0px,${topValue}px, 0px)`;\r\n    rowArray[elementNo].top = topValue;\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * rebuild header div, needed if user sets new columns or something\r\n   ****************************************************************************************************************************/\r\n  rebuildGridHeaderHtmlAndViewSlot() {\r\n    this.unbindDetachHeaderViewSlots();\r\n    this.headerElement.removeChild(this.headerScrollElement);\r\n    this.createGridHeaderElement();\r\n    this.createHeaderViewSlot();\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * sets scroll body to interal variable\r\n   ****************************************************************************************************************************/\r\n  setScrollBodyHeightToVar() {\r\n    var collectionLength = this.vGridConfig.getCollectionLength();\r\n    this.scrollBodyHeight = collectionLength * this.vGridConfig.attRowHeight;\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * add the scroll body, this is needed when user chnages columns or resize the columns, so main content knows if scrollbars is needed\r\n   ****************************************************************************************************************************/\r\n  correctRowAndScrollbodyWidth() {\r\n    this.contentScrollBodyElement.style.width = this.vGrid.vGridConfig.repeater ? \"100%\" : this.getTotalColumnWidth() + \"px\";\r\n    for (var i = 0; i < this.rowElementArray.length; i++) {\r\n      this.rowElementArray[i].div.style.width = \"100%\";\r\n      this.rowElementArray[i].div.style[\"min-width\"] = this.getTotalColumnWidth() + \"px\";\r\n    }\r\n    this.headerScrollElement.style.width = this.vGrid.vGridConfig.repeater ? \"100%\" : this.getTotalColumnWidth() + \"px\";\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   *\r\n   ****************************************************************************************************************************/\r\n  correctHeaderAndScrollbodyWidth() {\r\n    this.contentScrollBodyElement.style.width = this.vGrid.vGridConfig.repeater ? \"100%\" : this.getTotalColumnWidth() + \"px\";\r\n    this.headerScrollElement.style.width = this.vGrid.vGridConfig.repeater ? \"100%\" : this.getTotalColumnWidth() + \"px\";\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * helper, removes rows, se minus height so we cant scroll to empty\r\n   ****************************************************************************************************************************/\r\n  hideRowsThatIsLargerThanCollection() {\r\n    var currentRow = parseInt((this.vGridScrollEvents.lastScrollTop / this.vGridConfig.attRowHeight), 10);\r\n    for (var i = 0; i < this.getRowCacheLength(); i++) {\r\n      var row = this.rowElementArray[i];\r\n      var rowTop = parseInt(row.top, 10);\r\n      if (rowTop > ((this.vGridConfig.getCollectionLength() - 1) * this.vGridConfig.attRowHeight) && rowTop > (parseInt(this.contentElement.style.height) - this.vGridConfig.attRowHeight)) {\r\n        this.setRowTopValue([row], 0, -5000 + i);\r\n      }\r\n    }\r\n    //resort array\r\n    this.rowElementArray.sort(\r\n      function (a, b) {\r\n        return parseInt(a.top) - parseInt(b.top)\r\n      });\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * hiding scroll bars when not needed\r\n   ****************************************************************************************************************************/\r\n  updateGridScrollbars() {\r\n    var collectionHeight = this.vGridConfig.getCollectionLength() * this.vGridConfig.attRowHeight + (this.vGridConfig.attRowHeight / 2);\r\n    var bodyHeight = this.contentElement.offsetHeight;\r\n    if (collectionHeight <= bodyHeight) {\r\n      this.contentElement.scrollTop = 0;\r\n      this.contentElement.style.overflow = \"\";\r\n      this.contentElement.style.overflowY = \"hidden\";\r\n      this.contentElement.style.overflowX = \"hidden\";\r\n      this.headerElement.style.overflowY = \"hidden\";\r\n    } else {\r\n      this.contentElement.style.overflow = \"\";\r\n      this.contentElement.style.overflowY = \"scroll\";\r\n      this.contentElement.style.overflowX = \"hidden\";\r\n      this.headerElement.style.overflowY = \"scroll\";\r\n    }\r\n\r\n    //todo, what to do when its a repeater ?\r\n    if (this.contentElement.offsetWidth < this.getTotalColumnWidth() - 3) {\r\n      this.contentElement.style.overflowX = \"scroll\";\r\n    }\r\n\r\n\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * sett large scroll limit, looks like *3 content height is a better match from lates testing\r\n   ****************************************************************************************************************************/\r\n  setLargeScrollLimit() {\r\n    if (!this.vGridConfig.largeScrollLimit) {\r\n      this.vGridConfig.largeScrollLimit = this.contentHeight * 1.5;\r\n    }\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * unbind & detach the  row view slots\r\n   ****************************************************************************************************************************/\r\n  unbindDetachRowViewSlots() {\r\n    var rows = this.rowElementArray;\r\n    for (var i = 0; i < rows.length; i++) {\r\n      rows[i].viewSlot.unbind();\r\n      rows[i].viewSlot.detached();\r\n      rows[i].viewSlot.removeAll();\r\n      rows[i].viewSlot = null;\r\n      rows[i].div.innerHTML = \"\";\r\n      this.rowViewFactory = null;\r\n    }\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * unbind & detach the  header view slot\r\n   ****************************************************************************************************************************/\r\n  unbindDetachHeaderViewSlots() {\r\n    this.headerViewSlot.unbind();\r\n    this.headerViewSlot.detached();\r\n    this.headerViewSlot.removeAll();\r\n    this.headerViewSlot = null;\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * unbind & detach the  header view slot\r\n   ****************************************************************************************************************************/\r\n  unbindDetachFooterViewSlots() {\r\n    if (this.footerViewSlot) {\r\n      this.footerViewSlot.unbind();\r\n      this.footerViewSlot.detached();\r\n      this.footerViewSlot.removeAll();\r\n      this.footerViewSlot = null;\r\n    }\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * unbind & detach the  header view slot\r\n   ****************************************************************************************************************************/\r\n  unbindDetachLoadingScreenViewSlots() {\r\n    if (this.loadingScreenViewSlot) {\r\n      this.loadingScreenViewSlot.unbind();\r\n      this.loadingScreenViewSlot.detached();\r\n      this.loadingScreenViewSlot.removeAll();\r\n      this.loadingScreenViewSlot = null;\r\n    }\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * unbind & detach all view slots\r\n   ****************************************************************************************************************************/\r\n  unbindDetachViewSlots() {\r\n    this.unbindDetachRowViewSlots();\r\n    this.unbindDetachHeaderViewSlots();\r\n    this.unbindDetachFooterViewSlots();\r\n    this.unbindDetachLoadingScreenViewSlots();\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * recreate the row view slots\r\n   ****************************************************************************************************************************/\r\n  recreateRowViewSlots() {\r\n    this.unbindDetachRowViewSlots();\r\n    this.createRowViewSlots();\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * redraws most parts of grid...\r\n   ****************************************************************************************************************************/\r\n  redrawGrid() {\r\n    this.unbindDetachViewSlots();\r\n    this.vGridElement.getElementsByClassName(this.vGridConfig.css.wrapper)[0].remove();\r\n    this.rowElementArray = null;\r\n    this.rowElementArray = [];\r\n    this.headerElement = null;\r\n    this.contentElement = null;\r\n    this.footerElement = null;\r\n    this.contentScrollBodyElement = null;\r\n    this.rowViewFactory = null;\r\n    this.init(true);\r\n    this.fixHeaderWithBody();\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * fixes header body width\r\n   ****************************************************************************************************************************/\r\n  fixHeaderWithBody() {\r\n    var currentScrollLeft = this.contentElement.scrollLeft;\r\n    this.headerElement.scrollLeft = currentScrollLeft;\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * rebuilds columns incl header row, used by internal, but can also be called from outside\r\n   ****************************************************************************************************************************/\r\n  rebuildColumns() {\r\n    this.rebuildGridHeaderHtmlAndViewSlot();\r\n    this.recreateRowViewSlots();\r\n    this.rebindAllRowSlots();\r\n    this.correctRowAndScrollbodyWidth();\r\n    this.updateSelectionOnAllRows();\r\n    this.updateGridScrollbars();\r\n    this.fixHeaderWithBody();\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * rebuilds columns (not header), used by internal, but can also be called from outside\r\n   ****************************************************************************************************************************/\r\n  rebuildColumnsRows() {\r\n    this.recreateRowViewSlots();\r\n    this.rebindAllRowSlots();\r\n    this.updateSelectionOnAllRows();\r\n    this.fixHeaderWithBody()\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * rebuilds columns and trigger collection change in grid (rebuild rows), used by internal, but can also be called from outside\r\n   ****************************************************************************************************************************/\r\n  columnChangeAndCollection(resetScrollToTop) {\r\n    this.rebuildGridHeaderHtmlAndViewSlot();\r\n    this.recreateRowViewSlots();\r\n    this.rebindAllRowSlots();\r\n    this.updateSelectionOnAllRows();\r\n    this.collectionChange(resetScrollToTop);\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * trigger collection change in grid (rebuild rows), used by internal, but can also be called from outside\r\n   ****************************************************************************************************************************/\r\n  collectionChange(resetScrollToTop, scrollBottom) {\r\n    if (this.scrollBottomOnNext) {\r\n      //if overriden\r\n      scrollBottom = true;\r\n      this.scrollBottomOnNext = false;\r\n    }\r\n    //adjust scroller before updating, so it created unwanted side effects\r\n    this.setScrollBodyHeightToVar();\r\n    this.contentScrollBodyElement.style.height = this.scrollBodyHeight + \"px\";\r\n    var reset = false;\r\n    if (resetScrollToTop === true) {\r\n      this.contentElement.scrollTop = 0;\r\n    }\r\n    if (this.scrollBodyHeight < this.contentElement.scrollTop || scrollBottom) {\r\n      var collectionLength = this.vGridConfig.getCollectionLength();\r\n      var contentRows = parseInt(this.contentElement.offsetHeight / this.vGridConfig.attRowHeight);\r\n      var scrollOffsetHeight = contentRows * this.vGridConfig.attRowHeight;\r\n      this.contentElement.scrollTop = ((collectionLength * this.vGridConfig.attRowHeight) - (scrollOffsetHeight))\r\n\r\n    }\r\n    //reset scroll to bottom next.\r\n    this.updateGridScrollbars();\r\n    this.correctRowAndScrollbodyWidth();\r\n    this.updateSelectionOnAllRows();\r\n    this.fixHeaderWithBody();\r\n    this.vGridScrollEvents.onLargeScroll();\r\n    this.rebindAllRowSlots();\r\n    if (scrollBottom) {\r\n      this.contentElement.scrollTop = this.contentElement.scrollTop + this.vGridConfig.attRowHeight;\r\n    }\r\n    //if I dont do this, chrome fails...\r\n    this.contentScrollBodyElement.style.height = this.scrollBodyHeight - 1 + \"px\";\r\n    this.contentScrollBodyElement.style.height = this.scrollBodyHeight + 1 + \"px\";\r\n\r\n    this.vGrid.sendCollectionEvent();\r\n  };\r\n\r\n\r\n  listenForWindowResize() {\r\n\r\n    window.addEventListener(\"resize\", ()=> {\r\n\r\n      this.gridHeight = this.gridElement.clientHeight;\r\n      this.gridWidght = this.gridElement.clientWidth;\r\n      var gridWrapperHeight = this.gridHeight;\r\n      var headerAndFooterHeight = this.vGridConfig.attHeaderHeight + this.vGridConfig.attFooterHeight;\r\n      this.contentHeight = gridWrapperHeight - headerAndFooterHeight;\r\n      this.contentElement.style.height = this.contentHeight + \"px\";\r\n\r\n      var minimumRowsNeeded = parseInt(this.contentHeight / this.vGridConfig.attRowHeight, 10);\r\n      if (minimumRowsNeeded > this.minimumRowsNeeded) {\r\n\r\n        //get last scrolltop\r\n        let last = this.contentElement.scrollTop;\r\n\r\n        //redraw the grid;\r\n        this.redrawGrid();\r\n\r\n        //set last scrolltop\r\n        this.contentElement.scrollTop = last;\r\n\r\n        //trigger scroll event\r\n        this.vGridScrollEvents.onScrollbarScrolling();\r\n      }\r\n\r\n      this.updateGridScrollbars();\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n"]}