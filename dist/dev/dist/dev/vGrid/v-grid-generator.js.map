{"version":3,"sources":["vGrid/v-grid-generator.js"],"names":[],"mappings":"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","file":"vGrid/v-grid-generator.js","sourceRoot":"/source/","sourcesContent":["/*****************************************************************************************************************\r\n *    vGridGenerator\r\n *    This generates all html and adds the main events\r\n *    Created by vegar ringdal\r\n *\r\n ****************************************************************************************************************/\r\nimport {ViewSlot} from 'aurelia-framework';\r\n\r\nexport class VGridGenerator {\r\n\r\n  constructor(vGrid) {\r\n    this.vGrid = vGrid;\r\n  }\r\n\r\n  /***************************************************************************************\r\n   * getters/setters to make it easier\r\n   ***************************************************************************************/\r\n\r\n  get vGridSelection() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridSelection;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridConfig() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridConfig;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridCellHelper() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridCellHelper;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  get vGridElement() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.element;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  get vGridResizable() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridResizable;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  get vGridScrollEvents() {\r\n    if (this.vGrid) {\r\n      return this.vGrid.vGridScrollEvents;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  /*************************************************************************************\r\n   * internal vars\r\n   *************************************************************************************/\r\n\r\n  contentHeight = 0;\r\n  gridHeight = 0;\r\n  gridWidth = 0;\r\n  scrollBodyHeight = 0;\r\n  scrollBottomOnNext = false;\r\n\r\n  //cache\r\n  gridElement = null;\r\n  headerElement = null;\r\n  headerScrollElement = null;\r\n  contentElement = null;\r\n  footerElement = null;\r\n  rowElementArray = []; //this contains top, viewslots and \"div\" is the html element\r\n  contentScrollBodyElement = null;\r\n\r\n  //viewPorts\r\n  rowViewFactory = null;\r\n  loadingScreenViewSlot = null;\r\n  headerViewSlot = null;\r\n  footerViewSlot = null;\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * will create the actual grid (cant be constructor since I call this when rebuilding)\r\n   ****************************************************************************************************************************/\r\n  init(isRebuild) {\r\n\r\n    this.addHtml();\r\n    this.addRowsAndSlots();\r\n    this.addEvents();\r\n    if (!isRebuild) {\r\n      this.vGridSelection.setMode(this.vGridConfig.attMultiSelect);\r\n      this.listenForWindowResize();\r\n    }\r\n\r\n    this.updateGridScrollbars();\r\n    this.rebindAllRowSlots();\r\n    this.setLargeScrollLimit();\r\n\r\n    this.vGrid.sendCollectionEvent();\r\n\r\n\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * add the html\r\n   ****************************************************************************************************************************/\r\n  addHtml() {\r\n    //html elements\r\n    this.createGridElement();\r\n    this.createGridHeaderElement();\r\n    this.createGridContentElement();\r\n    this.createGridFooterElement();\r\n    this.createGridScrollBodyElement();\r\n    this.createGridRowElements();\r\n\r\n  }\r\n\r\n  /****************************************************************************************************************************\r\n   * add the viewslots\r\n   ****************************************************************************************************************************/\r\n  addRowsAndSlots() {\r\n\r\n    this.createLoadingScreenViewSlot();\r\n    this.createHeaderViewSlot();\r\n    this.createRowViewSlots();\r\n    if (this.vGridConfig.eventOnRemoteCall) {\r\n      this.createFooterViewSlot()\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * add the events  (this is called during rebuild etc\r\n   ****************************************************************************************************************************/\r\n  addEvents() {\r\n    //add all click events to rows\r\n    for (var i = 0; i < this.getRowCacheLength(); i++) {\r\n      var rowElement = this.rowElementArray[i].div;\r\n\r\n      rowElement.addEventListener(\"dblclick\", (e) => {\r\n        var currentRow = parseInt(e.currentTarget.getAttribute(\"row\"));\r\n        this.vGridConfig.clickHandler(e, currentRow);\r\n      }, false);\r\n\r\n      rowElement.addEventListener(\"click\", (e) => {\r\n        var currentRow = parseInt(e.currentTarget.getAttribute(\"row\"));\r\n        this.vGridConfig.clickHandler(e, currentRow);\r\n        if (this.vGridConfig.attMultiSelect !== undefined) {\r\n          this.vGridSelection.highlight(e, currentRow, this);\r\n        }\r\n      }, false);\r\n\r\n    }\r\n\r\n    //this have to be after clcik since it will cancel if scroll event\r\n    this.contentElement.addEventListener(\"scroll\", (e)=> {\r\n      if (this.vGridConfig.attRequestAnimationFrame) {\r\n        requestAnimationFrame(() => {\r\n          this.vGridScrollEvents.scrollEventHandler();\r\n        });\r\n      } else {\r\n        this.vGridScrollEvents.scrollEventHandler();\r\n      }\r\n    });\r\n\r\n    //fix bug when tabbing headers, and header is larger then content width\r\n    this.headerElement.addEventListener(\"scroll\", (e)=> {\r\n      this.contentElement.scrollLeft = this.headerElement.scrollLeft;\r\n      this.vGridScrollEvents.lastScrollLeft = this.headerElement.scrollLeft;\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * gets the main div to create grid in\r\n   ****************************************************************************************************************************/\r\n  createGridElement() {\r\n\r\n    var x = document.createElement(\"DIV\"); //create this a container for my 3 rows\r\n    this.vGridElement.appendChild(x);\r\n    this.vGridElement.style.display = \"block\"; //this was the issue for all my problems\r\n    this.gridElement = x;\r\n\r\n    //do this for I know very little about css, and doing it like this I didnt get those weird side effects\r\n    //todo look at this again, do not like what Ive done here\r\n    this.gridElement.classList.add(this.vGridConfig.css.wrapper);\r\n    this.gridElement.style.position = \"relative\";\r\n    this.gridElement.style.height = '100%';\r\n    this.gridElement.style.width = \"100%\";\r\n\r\n    //get default height and width\r\n    this.gridHeight = this.gridElement.clientHeight;\r\n    this.gridWidght = this.gridElement.clientWidth;\r\n\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * add header div\r\n   ****************************************************************************************************************************/\r\n  createGridHeaderElement() {\r\n    //create and append header div\r\n    var header = document.createElement(\"DIV\");\r\n    header.classList.add(this.vGridConfig.css.mainHeader);\r\n    header.style.height = this.vGridConfig.attHeaderHeight + \"px\";\r\n    if (!this.headerElement) {\r\n      this.gridElement.appendChild(header);\r\n      this.headerElement = header;\r\n    } else {\r\n      this.headerElement.innerHTML = header.innerHTML;\r\n    }\r\n    this.headerScrollElement = document.createElement(\"DIV\");\r\n    this.headerScrollElement.classList.add(this.vGridConfig.css.row);\r\n    this.headerScrollElement.classList.add(this.vGridConfig.css.rowHeader);\r\n    this.headerScrollElement.style.height = this.vGridConfig.attHeaderHeight + \"px\";\r\n    this.headerScrollElement.style.width = this.vGrid.vGridConfig.repeater ? \"100%\" : this.getTotalColumnWidth() + \"px\";\r\n    this.headerElement.appendChild(this.headerScrollElement);\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * add content div\r\n   ****************************************************************************************************************************/\r\n  createGridContentElement() {\r\n\r\n    //calculate content height\r\n    var gridWrapperHeight = this.gridHeight;\r\n    var headerAndFooterHeight = this.vGridConfig.attHeaderHeight + this.vGridConfig.attFooterHeight;\r\n    this.contentHeight = gridWrapperHeight - headerAndFooterHeight;\r\n\r\n    //create and append content div\r\n    this.contentElement = document.createElement(\"DIV\");\r\n    this.contentElement.classList.add(this.vGridConfig.css.mainContent);\r\n    this.contentElement.style.height = this.contentHeight + \"px\";\r\n    this.gridElement.appendChild(this.contentElement);\r\n\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * adds the footer\r\n   ****************************************************************************************************************************/\r\n  createGridFooterElement() {\r\n    //create and append\r\n    this.footerElement = document.createElement(\"DIV\");\r\n    this.footerElement.classList.add(this.vGridConfig.css.mainFooter);\r\n    this.footerElement.style.height = this.vGridConfig.attFooterHeight + \"px\";\r\n    this.gridElement.appendChild(this.footerElement);\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * add the scroll body\r\n   ****************************************************************************************************************************/\r\n  createGridScrollBodyElement() {\r\n    this.setScrollBodyHeightToVar();\r\n    //create and append\r\n    this.contentScrollBodyElement = document.createElement(\"DIV\");\r\n    this.contentScrollBodyElement.classList.add(this.vGridConfig.css.scrollBody);\r\n    this.contentScrollBodyElement.style.height = this.scrollBodyHeight + \"px\";\r\n    this.contentScrollBodyElement.style.width = this.vGrid.vGridConfig.repeater ? \"100%\" : this.getTotalColumnWidth() + \"px\";\r\n    this.contentElement.appendChild(this.contentScrollBodyElement);\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * add the rows to scroll div\r\n   ****************************************************************************************************************************/\r\n  createGridRowElements() {\r\n    //rows we need to fill up visible container\r\n    var minimumRowsNeeded = parseInt(this.contentHeight / this.vGridConfig.attRowHeight, 10);\r\n\r\n    //if this happends then they have done something really wring, or want to display all, lets make 100. (should really not happend)\r\n    if (0 > this.contentHeight) {\r\n      minimumRowsNeeded = 100;\r\n    }\r\n\r\n    //set extra so we can buffer\r\n    if (minimumRowsNeeded % 2 === 1) {\r\n      minimumRowsNeeded = minimumRowsNeeded + 7;\r\n    } else {\r\n      minimumRowsNeeded = minimumRowsNeeded + 6;\r\n    }\r\n\r\n    this.minimumRowsNeeded = minimumRowsNeeded;\r\n\r\n    var top = 0;\r\n    for (var i = 0; i < minimumRowsNeeded; i++) {\r\n\r\n      var row = document.createElement(\"DIV\");\r\n      //add row css\r\n      row.classList.add(this.vGridConfig.css.row);\r\n      //add alt/even css\r\n      if (i % 2 === 1) {\r\n        row.classList.add(this.vGridConfig.css.rowAlt);\r\n      } else {\r\n        row.classList.add(this.vGridConfig.css.rowEven);\r\n      }\r\n\r\n      row.style.height = this.vGridConfig.attRowHeight + \"px\";\r\n\r\n      this.setRowTopValue([{\r\n        div: row,\r\n        top: 0\r\n      }], 0, top);\r\n\r\n      row.style[\"min-width\"] = this.getTotalColumnWidth() + \"px\";\r\n      row.style.width = \"100%\";\r\n\r\n      //inner magic\r\n      row.innerHTML = \"\"; //? why Im I doing this? todo test... why\r\n\r\n      //add to scroll body\r\n      this.contentScrollBodyElement.appendChild(row);\r\n\r\n      //push into our html cache for later use when scrolling\r\n      //own for top so we get it faster\r\n      this.rowElementArray.push({\r\n        div: row,\r\n        top: top\r\n      });\r\n\r\n      //set new top for next row\r\n      top = top + this.vGridConfig.attRowHeight;\r\n\r\n    }//end for loop\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * creates loading screen\r\n   ****************************************************************************************************************************/\r\n  createLoadingScreenViewSlot() {\r\n\r\n    var loadingScreentHtml = [\r\n      '<div class=\"v-grid-overlay\" if.bind=\"loading\">',\r\n      '</div>',\r\n      '<div if.two-way=\"loading\" class=\"v-grid-progress-indicator\">',\r\n      '<div class=\"v-grid-progress-bar\" role=\"progressbar\" style=\"width:100%\">',\r\n      '<span>${ loadingMessage }</span>',\r\n      '</div>',\r\n      '</div>'\r\n    ];\r\n    var viewFactory = this.vGrid.viewCompiler.compile('<template>' + loadingScreentHtml.join(\"\") + '</template>', this.vGrid.viewResources);\r\n    var view = viewFactory.create(this.vGrid.container);\r\n    this.loadingScreenViewSlot = new ViewSlot(this.gridElement, true);\r\n    this.loadingScreenViewSlot.add(view);\r\n    //bind\r\n    this.loadingScreenViewSlot.bind(this.vGrid, {\r\n      bindingContext: this.vGrid,\r\n      parentOverrideContext: this.vGrid.overrideContext\r\n    });\r\n    this.loadingScreenViewSlot.attached();\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * creates the header viewslot\r\n   ****************************************************************************************************************************/\r\n  createHeaderViewSlot() {\r\n    var viewFactory = this.getHeaderViewFactory();\r\n    var view = viewFactory.create(this.vGrid.container);\r\n    this.headerViewSlot = new ViewSlot(this.headerScrollElement, true);\r\n    this.headerViewSlot.add(view);\r\n    //bind\r\n    let bindingContext = {};\r\n    this.headerViewSlot.bind(bindingContext, {\r\n      bindingContext: bindingContext,\r\n      parentOverrideContext: this.vGrid.overrideContext\r\n    });\r\n    this.headerViewSlot.attached();\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * creates the row viewslots\r\n   ****************************************************************************************************************************/\r\n  createRowViewSlots() {\r\n    var rows = this.rowElementArray;\r\n    for (var i = 0; i < rows.length; i++) {\r\n      var viewFactory = this.getRowViewFactory();\r\n      var view = viewFactory.create(this.vGrid.container);\r\n      rows[i].viewSlot = new ViewSlot(rows[i].div, true);\r\n      rows[i].viewSlot.add(view);\r\n      let bindingContext = {};\r\n      rows[i].viewSlot.bind(bindingContext, {\r\n        bindingContext: bindingContext,\r\n        parentOverrideContext: this.vGrid.overrideContext\r\n      });\r\n      rows[i].viewSlot.attached();\r\n    }\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * creates the footer viewslots\r\n   ****************************************************************************************************************************/\r\n  createFooterViewSlot() {\r\n    var pagerElement = this.vGridConfig.attCustomPager || '<v-grid-pager></v-grid-pager>';\r\n    var viewFactory = this.vGrid.viewCompiler.compile(`<template>${pagerElement}</template>`, this.vGrid.viewResources);\r\n    var view = viewFactory.create(this.vGrid.container);\r\n\r\n    this.footerViewSlot = new ViewSlot(this.footerElement, true);\r\n    this.footerViewSlot.add(view);\r\n\r\n    this.footerViewSlot.bind(this, {\r\n      bindingContext: this,\r\n      parentOverrideContext: this.vGrid.overrideContext\r\n    });\r\n\r\n    this.footerViewSlot.attached();\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * fills data into rows (all)\r\n   ****************************************************************************************************************************/\r\n  rebindAllRowSlots() {\r\n    for (var i = 0; i < this.getRowCacheLength(); i++) {\r\n      var currentRow = this.rowElementArray[i].top / this.vGridConfig.attRowHeight;\r\n      var row = this.rowElementArray[i];\r\n      this.vGridConfig.updateRowBinding(currentRow, row, true, true);\r\n    }\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * fills data into row, 1 row!\r\n   ****************************************************************************************************************************/\r\n  rebindRowNumber(rowno) {\r\n    for (var i = 0; i < this.getRowCacheLength(); i++) {\r\n      var currentRow = this.rowElementArray[i].top / this.vGridConfig.attRowHeight;\r\n      if (rowno === currentRow) {\r\n        var row = this.rowElementArray[i];\r\n        this.vGridConfig.updateRowBinding(currentRow, row, true, true);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * updates only selection on rows\r\n   ****************************************************************************************************************************/\r\n  updateSelectionOnAllRows() {\r\n    var i;\r\n    for (i = 0; i < this.getRowCacheLength(); i++) {\r\n      var currentRow = this.rowElementArray[i].top / this.vGridConfig.attRowHeight;\r\n      if (this.vGridSelection.isSelected(currentRow)) {\r\n        this.rowElementArray[i].div.classList.add(this.vGridConfig.css.rowSelected);\r\n      } else {\r\n        this.rowElementArray[i].div.classList.remove(this.vGridConfig.css.rowSelected);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * returns header template\r\n   ****************************************************************************************************************************/\r\n  getHeaderViewFactory() {\r\n    var rowTemplate = \"\";\r\n    if (this.vGrid.vGridConfig.repeater) {\r\n      rowTemplate = this.vGrid.vGridConfig.repeatRowHeaderTemplate;\r\n    } else {\r\n      for (var i = 0; i < this.vGridConfig.columnLength; i++) {\r\n\r\n        var style = `style=\"width:${this.vGridConfig.colConfig[i].colWidth}px\"`;\r\n        var elementClass = `class=\"${this.vGridConfig.css.rowHeaderColumn + i}\"`;\r\n        var template = this.vGridConfig.colConfig[i].colHeaderTemplate;\r\n\r\n        rowTemplate = rowTemplate + `<v-grid-header-col ${style} ${elementClass} column-no=\"${i}\">${template}</v-grid-header-col>`;\r\n      }\r\n    }\r\n    var viewFactory = this.vGrid.viewCompiler.compile(`<template>${rowTemplate}</template>`, this.vGrid.viewResources);\r\n    return viewFactory;\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * returns row viewFactory, if it does not exist it creates it\r\n   ****************************************************************************************************************************/\r\n  getRowViewFactory() {\r\n    var viewFactory;\r\n\r\n    if (this.rowViewFactory !== null) {\r\n      viewFactory = this.rowViewFactory;\r\n    } else {\r\n      var rowTemplate = \"\";\r\n      if (this.vGrid.vGridConfig.repeater) {\r\n        rowTemplate = '<template>' + this.vGridConfig.repeatRowTemplate + '</template>'\r\n      } else {\r\n        rowTemplate = '<template>';\r\n        for (var i = 0; i < this.vGridConfig.columnLength; i++) {\r\n\r\n          var style = `style=\"width:${this.vGridConfig.colConfig[i].colWidth}px\"`;\r\n          var elementClass = `class=\"${this.vGridConfig.css.rowColumn + i}\"`;\r\n          var template = this.vGridConfig.colConfig[i].colRowTemplate;\r\n\r\n          rowTemplate = rowTemplate + `<v-grid-row-col ${style} ${elementClass} column-no=${i}>${template}</v-grid-row-col>`;\r\n        }\r\n        rowTemplate + '</template>';\r\n      }\r\n      viewFactory = this.vGrid.viewCompiler.compile(rowTemplate, this.vGrid.viewResources);\r\n    }\r\n\r\n    //cache template\r\n    this.rowViewFactory = viewFactory;\r\n\r\n    //return cache;\r\n    return this.rowViewFactory\r\n\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * get total column width\r\n   ****************************************************************************************************************************/\r\n  getTotalColumnWidth() {\r\n    var total = 0;\r\n    for (var i = 0; i < this.vGridConfig.columnLength; i++) {\r\n      total = total + parseInt(this.vGridConfig.colConfig[i].colWidth, 10);\r\n    }\r\n    return total;\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * gets the row cache length...\r\n   ****************************************************************************************************************************/\r\n  getRowCacheLength() {\r\n    return this.rowElementArray.length;\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * set top value, here I could have failback to TOP instead of translate 3d\r\n   ****************************************************************************************************************************/\r\n  setRowTopValue(rowArray, elementNo, topValue) {\r\n    rowArray[elementNo].div.style.transform = `translate3d(0px,${topValue}px, 0px)`;\r\n    rowArray[elementNo].top = topValue;\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * rebuild header div, needed if user sets new columns or something\r\n   ****************************************************************************************************************************/\r\n  rebuildGridHeaderHtmlAndViewSlot() {\r\n    this.unbindDetachHeaderViewSlots();\r\n    this.headerElement.removeChild(this.headerScrollElement);\r\n    this.createGridHeaderElement();\r\n    this.createHeaderViewSlot();\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * sets scroll body to interal variable\r\n   ****************************************************************************************************************************/\r\n  setScrollBodyHeightToVar() {\r\n    var collectionLength = this.vGridConfig.getCollectionLength();\r\n    this.scrollBodyHeight = collectionLength * this.vGridConfig.attRowHeight;\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * add the scroll body, this is needed when user chnages columns or resize the columns, so main content knows if scrollbars is needed\r\n   ****************************************************************************************************************************/\r\n  correctRowAndScrollbodyWidth() {\r\n    this.contentScrollBodyElement.style.width = this.vGrid.vGridConfig.repeater ? \"100%\" : this.getTotalColumnWidth() + \"px\";\r\n    for (var i = 0; i < this.rowElementArray.length; i++) {\r\n      this.rowElementArray[i].div.style.width = \"100%\";\r\n      this.rowElementArray[i].div.style[\"min-width\"] = this.getTotalColumnWidth() + \"px\";\r\n    }\r\n    this.headerScrollElement.style.width = this.vGrid.vGridConfig.repeater ? \"100%\" : this.getTotalColumnWidth() + \"px\";\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   *\r\n   ****************************************************************************************************************************/\r\n  correctHeaderAndScrollbodyWidth() {\r\n    this.contentScrollBodyElement.style.width = this.vGrid.vGridConfig.repeater ? \"100%\" : this.getTotalColumnWidth() + \"px\";\r\n    this.headerScrollElement.style.width = this.vGrid.vGridConfig.repeater ? \"100%\" : this.getTotalColumnWidth() + \"px\";\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * helper, removes rows, se minus height so we cant scroll to empty\r\n   ****************************************************************************************************************************/\r\n  hideRowsThatIsLargerThanCollection() {\r\n    var currentRow = parseInt((this.vGridScrollEvents.lastScrollTop / this.vGridConfig.attRowHeight), 10);\r\n    for (var i = 0; i < this.getRowCacheLength(); i++) {\r\n      var row = this.rowElementArray[i];\r\n      var rowTop = parseInt(row.top, 10);\r\n      if (rowTop > ((this.vGridConfig.getCollectionLength() - 1) * this.vGridConfig.attRowHeight) && rowTop > (parseInt(this.contentElement.style.height) - this.vGridConfig.attRowHeight)) {\r\n        this.setRowTopValue([row], 0, -5000 + i);\r\n      }\r\n    }\r\n    //resort array\r\n    this.rowElementArray.sort(\r\n      function (a, b) {\r\n        return parseInt(a.top) - parseInt(b.top)\r\n      });\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * hiding scroll bars when not needed\r\n   ****************************************************************************************************************************/\r\n  updateGridScrollbars() {\r\n    var collectionHeight = this.vGridConfig.getCollectionLength() * this.vGridConfig.attRowHeight + (this.vGridConfig.attRowHeight / 2);\r\n    var bodyHeight = this.contentElement.offsetHeight;\r\n    if (collectionHeight <= bodyHeight) {\r\n      this.contentElement.scrollTop = 0;\r\n      this.contentElement.style.overflow = \"\";\r\n      this.contentElement.style.overflowY = \"hidden\";\r\n      this.contentElement.style.overflowX = \"hidden\";\r\n      this.headerElement.style.overflowY = \"hidden\";\r\n    } else {\r\n      this.contentElement.style.overflow = \"\";\r\n      this.contentElement.style.overflowY = \"scroll\";\r\n      this.contentElement.style.overflowX = \"hidden\";\r\n      this.headerElement.style.overflowY = \"scroll\";\r\n    }\r\n\r\n    //todo, what to do when its a repeater ?\r\n    if (this.contentElement.offsetWidth < this.getTotalColumnWidth() - 3) {\r\n      this.contentElement.style.overflowX = \"scroll\";\r\n    }\r\n\r\n\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * sett large scroll limit, looks like *3 content height is a better match from lates testing\r\n   ****************************************************************************************************************************/\r\n  setLargeScrollLimit() {\r\n    if (!this.vGridConfig.largeScrollLimit) {\r\n      this.vGridConfig.largeScrollLimit = this.contentHeight * 1.5;\r\n    }\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * unbind & detach the  row view slots\r\n   ****************************************************************************************************************************/\r\n  unbindDetachRowViewSlots() {\r\n    var rows = this.rowElementArray;\r\n    for (var i = 0; i < rows.length; i++) {\r\n      rows[i].viewSlot.unbind();\r\n      rows[i].viewSlot.detached();\r\n      rows[i].viewSlot.removeAll();\r\n      rows[i].viewSlot = null;\r\n      rows[i].div.innerHTML = \"\";\r\n      this.rowViewFactory = null;\r\n    }\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * unbind & detach the  header view slot\r\n   ****************************************************************************************************************************/\r\n  unbindDetachHeaderViewSlots() {\r\n    this.headerViewSlot.unbind();\r\n    this.headerViewSlot.detached();\r\n    this.headerViewSlot.removeAll();\r\n    this.headerViewSlot = null;\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * unbind & detach the  header view slot\r\n   ****************************************************************************************************************************/\r\n  unbindDetachFooterViewSlots() {\r\n    if (this.footerViewSlot) {\r\n      this.footerViewSlot.unbind();\r\n      this.footerViewSlot.detached();\r\n      this.footerViewSlot.removeAll();\r\n      this.footerViewSlot = null;\r\n    }\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * unbind & detach the  header view slot\r\n   ****************************************************************************************************************************/\r\n  unbindDetachLoadingScreenViewSlots() {\r\n    if (this.loadingScreenViewSlot) {\r\n      this.loadingScreenViewSlot.unbind();\r\n      this.loadingScreenViewSlot.detached();\r\n      this.loadingScreenViewSlot.removeAll();\r\n      this.loadingScreenViewSlot = null;\r\n    }\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * unbind & detach all view slots\r\n   ****************************************************************************************************************************/\r\n  unbindDetachViewSlots() {\r\n    this.unbindDetachRowViewSlots();\r\n    this.unbindDetachHeaderViewSlots();\r\n    this.unbindDetachFooterViewSlots();\r\n    this.unbindDetachLoadingScreenViewSlots();\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * recreate the row view slots\r\n   ****************************************************************************************************************************/\r\n  recreateRowViewSlots() {\r\n    this.unbindDetachRowViewSlots();\r\n    this.createRowViewSlots();\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * redraws most parts of grid...\r\n   ****************************************************************************************************************************/\r\n  redrawGrid() {\r\n    this.unbindDetachViewSlots();\r\n    this.vGridElement.getElementsByClassName(this.vGridConfig.css.wrapper)[0].remove();\r\n    this.rowElementArray = null;\r\n    this.rowElementArray = [];\r\n    this.headerElement = null;\r\n    this.contentElement = null;\r\n    this.footerElement = null;\r\n    this.contentScrollBodyElement = null;\r\n    this.rowViewFactory = null;\r\n    this.init(true);\r\n    this.fixHeaderWithBody();\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * fixes header body width\r\n   ****************************************************************************************************************************/\r\n  fixHeaderWithBody() {\r\n    var currentScrollLeft = this.contentElement.scrollLeft;\r\n    this.headerElement.scrollLeft = currentScrollLeft;\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * rebuilds columns incl header row, used by internal, but can also be called from outside\r\n   ****************************************************************************************************************************/\r\n  rebuildColumns() {\r\n    this.rebuildGridHeaderHtmlAndViewSlot();\r\n    this.recreateRowViewSlots();\r\n    this.rebindAllRowSlots();\r\n    this.correctRowAndScrollbodyWidth();\r\n    this.updateSelectionOnAllRows();\r\n    this.updateGridScrollbars();\r\n    this.fixHeaderWithBody();\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * rebuilds columns (not header), used by internal, but can also be called from outside\r\n   ****************************************************************************************************************************/\r\n  rebuildColumnsRows() {\r\n    this.recreateRowViewSlots();\r\n    this.rebindAllRowSlots();\r\n    this.updateSelectionOnAllRows();\r\n    this.fixHeaderWithBody()\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * rebuilds columns and trigger collection change in grid (rebuild rows), used by internal, but can also be called from outside\r\n   ****************************************************************************************************************************/\r\n  columnChangeAndCollection(resetScrollToTop) {\r\n    this.rebuildGridHeaderHtmlAndViewSlot();\r\n    this.recreateRowViewSlots();\r\n    this.rebindAllRowSlots();\r\n    this.updateSelectionOnAllRows();\r\n    this.collectionChange(resetScrollToTop);\r\n  };\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * trigger collection change in grid (rebuild rows), used by internal, but can also be called from outside\r\n   ****************************************************************************************************************************/\r\n  collectionChange(resetScrollToTop, scrollBottom) {\r\n    if (this.scrollBottomOnNext) {\r\n      //if overriden\r\n      scrollBottom = true;\r\n      this.scrollBottomOnNext = false;\r\n    }\r\n    //adjust scroller before updating, so it created unwanted side effects\r\n    this.setScrollBodyHeightToVar();\r\n    this.contentScrollBodyElement.style.height = this.scrollBodyHeight + \"px\";\r\n    var reset = false;\r\n    if (resetScrollToTop === true) {\r\n      this.contentElement.scrollTop = 0;\r\n    }\r\n    if (this.scrollBodyHeight < this.contentElement.scrollTop || scrollBottom) {\r\n      var collectionLength = this.vGridConfig.getCollectionLength();\r\n      var contentRows = parseInt(this.contentElement.offsetHeight / this.vGridConfig.attRowHeight);\r\n      var scrollOffsetHeight = contentRows * this.vGridConfig.attRowHeight;\r\n      this.contentElement.scrollTop = ((collectionLength * this.vGridConfig.attRowHeight) - (scrollOffsetHeight))\r\n\r\n    }\r\n    //reset scroll to bottom next.\r\n    this.updateGridScrollbars();\r\n    this.correctRowAndScrollbodyWidth();\r\n    this.updateSelectionOnAllRows();\r\n    this.fixHeaderWithBody();\r\n    this.vGridScrollEvents.onLargeScroll();\r\n    this.rebindAllRowSlots();\r\n    if (scrollBottom) {\r\n      this.contentElement.scrollTop = this.contentElement.scrollTop + this.vGridConfig.attRowHeight;\r\n    }\r\n    //if I dont do this, chrome fails...\r\n    this.contentScrollBodyElement.style.height = this.scrollBodyHeight - 1 + \"px\";\r\n    this.contentScrollBodyElement.style.height = this.scrollBodyHeight + 1 + \"px\";\r\n\r\n    this.vGrid.sendCollectionEvent();\r\n  };\r\n\r\n\r\n  listenForWindowResize() {\r\n\r\n    window.addEventListener(\"resize\", ()=> {\r\n\r\n      this.gridHeight = this.gridElement.clientHeight;\r\n      this.gridWidght = this.gridElement.clientWidth;\r\n      var gridWrapperHeight = this.gridHeight;\r\n      var headerAndFooterHeight = this.vGridConfig.attHeaderHeight + this.vGridConfig.attFooterHeight;\r\n      this.contentHeight = gridWrapperHeight - headerAndFooterHeight;\r\n      this.contentElement.style.height = this.contentHeight + \"px\";\r\n\r\n      var minimumRowsNeeded = parseInt(this.contentHeight / this.vGridConfig.attRowHeight, 10);\r\n      if (minimumRowsNeeded > this.minimumRowsNeeded) {\r\n\r\n        //get last scrolltop\r\n        let last = this.contentElement.scrollTop;\r\n\r\n        //redraw the grid;\r\n        this.redrawGrid();\r\n\r\n        //set last scrolltop\r\n        this.contentElement.scrollTop = last;\r\n\r\n        //trigger scroll event\r\n        this.vGridScrollEvents.onScrollbarScrolling();\r\n      }\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n"]}