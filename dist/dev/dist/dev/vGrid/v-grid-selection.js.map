{"version":3,"sources":["vGrid/v-grid-selection.js"],"names":["VGridSelection","mode","vGrid","selectionMode","lastRowSelected","lastKeyKodeUsed","selectedRows","selection","Set","triggerEvent","sendCollectionEvent","setMode","isSelected","row","result","vGridCollectionFiltered","has","vGridRowKey","isSelectedMain","vGridCollection","deSelect","delete","size","deSelectMain","select","addToSelection","undefined","clear","add","selectMain","selectRange","start","end","i","selectAll","length","vGridCurrentRow","deSelectAll","selectRangeMain","reset","getSelectedRows","array","forEach","x","index","push","getSelectedRowsMain","setSelectedRows","newRows","setSelectedRowsMain","highlight","e","currentRow","vGridGenerator","isSel","manualSel","vGridConfig","attManualSelection","currentselectedRows","currentKeyKode","getCollectionLength","shiftKey","ctrlKey","oldSel","newSel","concat","console","error","updateSelectionOnAllRows"],"mappings":"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","file":"vGrid/v-grid-selection.js","sourceRoot":"/source/","sourcesContent":["/*****************************************************************************************************************\r\n *    vGridSelection\r\n *    This just inserts the strings into html templates\r\n *    Created by vegar ringdal\r\n *\r\n ****************************************************************************************************************/\r\nexport class VGridSelection {\r\n\r\n  constructor(mode, vGrid) {\r\n\r\n    this.vGrid = vGrid;\r\n    this.selectionMode = \"none\";\r\n    this.lastRowSelected = -1; //this need to be reset when filtering\r\n    this.lastKeyKodeUsed = \"none\"; //this ned to be reset when filtering\r\n    this.selectedRows = 0;\r\n\r\n    if (mode === false) {\r\n      this.selectionMode = \"single\";\r\n    }\r\n    if (mode === true) {\r\n      this.selectionMode = \"multiple\";\r\n    }\r\n\r\n    this.selection = new Set([]);\r\n\r\n\r\n  }\r\n\r\n\r\n  triggerEvent(){\r\n    //send out event\r\n    this.vGrid.sendCollectionEvent();\r\n  }\r\n\r\n\r\n  setMode(mode) {\r\n    this.selectionMode = \"none\";\r\n    if (mode === false) {\r\n      this.selectionMode = \"single\";\r\n    }\r\n    if (mode === true) {\r\n      this.selectionMode = \"multiple\";\r\n    }\r\n\r\n  }\r\n\r\n\r\n  isSelected(row) {\r\n    var result = false;\r\n    if (this.selectedRows > 0) {\r\n      if (this.vGrid.vGridCollectionFiltered[row]) {\r\n        result = this.selection.has(this.vGrid.vGridCollectionFiltered[row][this.vGrid.vGridRowKey]);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n  isSelectedMain(row) {\r\n    var result = false;\r\n    if (this.selectedRows > 0) {\r\n      if (this.vGrid.vGridCollection[row]) {\r\n        result = this.selection.has(this.vGrid.vGridCollection[row][this.vGrid.vGridRowKey]);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n  deSelect(row) {\r\n    if (this.vGrid.vGridCollectionFiltered[row]) {\r\n      this.selection.delete(this.vGrid.vGridCollectionFiltered[row][this.vGrid.vGridRowKey]);\r\n    }\r\n    this.selectedRows = this.selection.size;\r\n\r\n    //send out event\r\n    this.triggerEvent();\r\n\r\n  }\r\n\r\n\r\n  deSelectMain(row) {\r\n    if (this.vGrid.vGridCollection[row]) {\r\n      this.selection.delete(this.vGrid.vGridCollection[row][this.vGrid.vGridRowKey]);\r\n    }\r\n    this.selectedRows = this.selection.size;\r\n\r\n    //send out event\r\n    this.triggerEvent();\r\n\r\n  }\r\n\r\n\r\n  select(row, addToSelection) {\r\n    switch (this.selectionMode) {\r\n      case \"none\":\r\n      case null:\r\n      case undefined:\r\n        break;\r\n      case \"single\":\r\n        this.selection.clear();\r\n        if (this.vGrid.vGridCollectionFiltered[row]) {\r\n          this.selection.add(this.vGrid.vGridCollectionFiltered[row][this.vGrid.vGridRowKey]);\r\n        }\r\n        this.selectedRows = this.selection.size;\r\n        break;\r\n      case \"multiple\":\r\n        if (!addToSelection) {\r\n          this.selection.clear();\r\n          if (this.vGrid.vGridCollectionFiltered[row]) {\r\n            this.selection.add(this.vGrid.vGridCollectionFiltered[row][this.vGrid.vGridRowKey]);\r\n          }\r\n          this.selectedRows = this.selection.size;\r\n        } else {\r\n          if (this.vGrid.vGridCollectionFiltered[row]) {\r\n            this.selection.add(this.vGrid.vGridCollectionFiltered[row][this.vGrid.vGridRowKey]);\r\n          }\r\n          this.selectedRows = this.selection.size;\r\n        }\r\n    }\r\n\r\n    //send out event\r\n    this.triggerEvent();\r\n\r\n  }\r\n\r\n\r\n  selectMain(row, addToSelection) {\r\n    switch (this.selectionMode) {\r\n      case \"none\":\r\n      case null:\r\n      case undefined:\r\n        break;\r\n      case \"single\":\r\n        this.selection.clear();\r\n        if (this.vGrid.vGridCollection[row]) {\r\n          this.selection.add(this.vGrid.vGridCollection[row][this.vGrid.vGridRowKey]);\r\n        }\r\n        this.selectedRows = this.selection.size;\r\n        break;\r\n      case \"multiple\":\r\n        if (!addToSelection) {\r\n          this.selection.clear();\r\n          if (this.vGrid.vGridCollection[row]) {\r\n            this.selection.add(this.vGrid.vGridCollection[row][this.vGrid.vGridRowKey]);\r\n          }\r\n          this.selectedRows = this.selection.size;\r\n        } else {\r\n          if (this.vGrid.vGridCollection[row]) {\r\n            this.selection.add(this.vGrid.vGridCollection[row][this.vGrid.vGridRowKey]);\r\n          }\r\n          this.selectedRows = this.selection.size;\r\n        }\r\n    }\r\n\r\n    //send out event\r\n    this.triggerEvent();\r\n\r\n  }\r\n\r\n\r\n  selectRange(start, end) {\r\n    if (this.selectionMode === \"multiple\") {\r\n      this.selection.clear();\r\n      for (var i = start; i < end + 1; i++) {\r\n        this.selection.add(this.vGrid.vGridCollectionFiltered[i][this.vGrid.vGridRowKey]);\r\n      }\r\n      this.selectedRows = this.selection.size;\r\n    }\r\n\r\n    //send out event\r\n    this.triggerEvent();\r\n  }\r\n\r\n\r\n  selectAll() {\r\n    if (this.selectionMode === \"multiple\") {\r\n      for (var i = 0; i < this.vGrid.vGridCollectionFiltered.length; i++) {\r\n        this.selection.add(this.vGrid.vGridCollectionFiltered[i][this.vGrid.vGridRowKey]);\r\n      }\r\n      this.selectedRows = this.selection.size;\r\n    }\r\n    if (this.selectionMode === \"single\" && this.vGrid.vGridCurrentRow >= 0) {\r\n      this.selection.clear();\r\n      this.selection.add(this.vGrid.vGridCollectionFiltered[this.vGrid.vGridCurrentRow][this.vGrid.vGridRowKey]);\r\n      this.selectedRows = this.selection.size;\r\n    }\r\n\r\n    //send out event\r\n    this.triggerEvent();\r\n\r\n  }\r\n\r\n  deSelectAll() {\r\n    for (var i = 0; i < this.vGrid.vGridCollectionFiltered.length; i++) {\r\n      this.selection.delete(this.vGrid.vGridCollectionFiltered[i][this.vGrid.vGridRowKey]);\r\n    }\r\n    this.selectedRows = this.selection.size;\r\n\r\n    //send out event\r\n    this.triggerEvent();\r\n  }\r\n\r\n\r\n  selectRangeMain(start, end) {\r\n    if (this.selectionMode === \"multiple\") {\r\n      this.selection.clear();\r\n      for (var i = start; i < end + 1; i++) {\r\n        this.selection.add(this.vGrid.vGridCollection[i][this.vGrid.vGridRowKey]);\r\n      }\r\n      this.selectedRows = this.selection.size;\r\n    }\r\n\r\n    //send out event\r\n    this.triggerEvent();\r\n  }\r\n\r\n\r\n  reset() {\r\n    if (this.selectedRows > 0) {\r\n      this.selection.clear();\r\n    }\r\n    this.lastRowSelected = -1;\r\n    this.lastKeyKodeUsed = \"none\";\r\n    this.selectedRows = this.selection.size;\r\n\r\n    //send out event\r\n    this.triggerEvent();\r\n  }\r\n\r\n\r\n  getSelectedRows() {\r\n    var array = [];\r\n    if (this.selectedRows > 0) {\r\n      this.vGrid.vGridCollectionFiltered.forEach((x, index) => {\r\n        if (this.selection.has(x[this.vGrid.vGridRowKey]) === true) {\r\n          array.push(index);\r\n        }\r\n      });\r\n    }\r\n    return array;\r\n\r\n  }\r\n\r\n\r\n  getSelectedRowsMain() {\r\n    var array = [];\r\n    if (this.selectedRows > 0) {\r\n      this.vGrid.vGridCollection.forEach((x, index) => {\r\n        if (this.selection.has(x[this.vGrid.vGridRowKey]) === true) {\r\n          array.push(index);\r\n        }\r\n      });\r\n    }\r\n    return array;\r\n  }\r\n\r\n  setSelectedRows(newRows) {\r\n    if (this.selectedRows > 0) {\r\n      this.selection.clear();\r\n    }\r\n    for (var i = 0; i < newRows.length; i++) {\r\n      this.selection.add(this.vGrid.vGridCollectionFiltered[newRows[i]][this.vGrid.vGridRowKey]);\r\n    }\r\n    this.selectedRows = this.selection.size;\r\n\r\n    //send out event\r\n    this.triggerEvent();\r\n\r\n  }\r\n\r\n\r\n  setSelectedRowsMain(newRows) {\r\n    if (this.selectedRows > 0) {\r\n      this.selection.clear();\r\n    }\r\n    for (var i = 0; i < newRows.length; i++) {\r\n      this.selection.add(this.vGrid.vGridCollection[newRows[i]][this.vGrid.vGridRowKey]);\r\n    }\r\n    this.selectedRows = this.selection.size;\r\n\r\n    //send out event\r\n    this.triggerEvent();\r\n\r\n  }\r\n\r\n\r\n  /****************************************************************************************************************************\r\n   * fixes highlight and select...\r\n   ****************************************************************************************************************************/\r\n  highlight(e, currentRow, vGridGenerator) {\r\n\r\n    var isSel;\r\n    var manualSel = this.vGrid.vGridConfig.attManualSelection;\r\n    if (!manualSel) {\r\n      var currentselectedRows = this.getSelectedRows();\r\n      var currentKeyKode = \"\";\r\n\r\n      if (currentRow !== this.lastRowSelected || currentselectedRows[0] !== currentRow) {\r\n\r\n        if (currentRow <= (vGridGenerator.vGridConfig.getCollectionLength() - 1)) { //do I need to check this?\r\n\r\n          if (this.selectionMode === \"multiple\") { //if multiselect duh!\r\n\r\n\r\n\r\n            if (e.shiftKey) {\r\n              currentKeyKode = \"shift\";\r\n              currentselectedRows = this.getSelectedRows();\r\n              if (currentselectedRows.length > 0 && this.lastKeyKodeUsed === \"none\") {\r\n                this.lastRowSelected = currentselectedRows[0];\r\n                this.lastKeyKodeUsed = \"shift\";\r\n              }\r\n            }\r\n\r\n            if (e.ctrlKey) {\r\n              currentKeyKode = \"ctrl\";\r\n            }\r\n\r\n            if (!e.ctrlKey && !e.shiftKey) {\r\n              currentKeyKode = \"none\";\r\n            }\r\n\r\n            switch (true) {\r\n              case currentKeyKode === \"none\":\r\n                this.select(currentRow);\r\n                break;\r\n              case this.lastKeyKodeUsed === \"shift\" && currentKeyKode === \"ctrl\":\r\n\r\n                isSel = this.isSelected(currentRow);\r\n                if (isSel === true) {\r\n                  this.deSelect(currentRow);\r\n                } else {\r\n                  this.select(currentRow, true);\r\n                }\r\n                this.lastRowSelected = currentRow;\r\n                break;\r\n\r\n              case this.lastKeyKodeUsed === \"ctrl\" && currentKeyKode === \"shift\":\r\n                var oldSel = this.getSelectedRows();\r\n                this.selectRange(this.lastRowSelected, currentRow);\r\n                var newSel = this.getSelectedRows();\r\n                this.setSelectedRows(oldSel.concat(newSel));\r\n\r\n                break;\r\n\r\n              case this.lastKeyKodeUsed === \"ctrl\" && currentKeyKode === \"ctrl\":\r\n\r\n                isSel = this.isSelected(currentRow);\r\n                if (isSel === true) {\r\n                  this.deSelect(currentRow);\r\n                } else {\r\n                  this.select(currentRow, true);\r\n                }\r\n                this.lastRowSelected = currentRow;\r\n                break;\r\n\r\n              case this.lastKeyKodeUsed === \"none\" && currentKeyKode === \"ctrl\":\r\n\r\n                isSel = this.isSelected(currentRow);\r\n                if (isSel === true) {\r\n                  this.deSelect(currentRow);\r\n                } else {\r\n                  this.select(currentRow, true);\r\n                }\r\n                this.lastRowSelected = currentRow;\r\n                break;\r\n\r\n              case this.lastKeyKodeUsed === \"shift\" && currentKeyKode === \"shift\":\r\n\r\n                if (this.lastRowSelected > currentRow) {\r\n                  this.selectRange(currentRow, this.lastRowSelected);\r\n                } else {\r\n                  this.selectRange(this.lastRowSelected, currentRow);\r\n                }\r\n\r\n                break;\r\n\r\n              case this.lastKeyKodeUsed === \"none\" && currentKeyKode === \"shift\":\r\n\r\n                if (this.lastRowSelected !== -1) {\r\n                  if (this.lastRowSelected > currentRow) {\r\n                    this.selectRange(currentRow, this.lastRowSelected);\r\n                  } else {\r\n                    this.selectRange(this.lastRowSelected, currentRow);\r\n                  }\r\n                } else {\r\n                  this.lastRowSelected = currentRow;\r\n                  this.select(currentRow);\r\n                }\r\n                break;\r\n              default:\r\n                console.error(\"error, this should not happen, debug selection\");\r\n            }\r\n          } else {\r\n            this.select(currentRow);\r\n          }\r\n          this.lastKeyKodeUsed = currentKeyKode;\r\n\r\n          //update selection on rows\r\n          vGridGenerator.updateSelectionOnAllRows();\r\n        }\r\n      } else {\r\n\r\n        //same row clicked again\r\n        if (e.ctrlKey) {\r\n          currentKeyKode = \"ctrl\";\r\n        }\r\n\r\n        //if ctrl button we want to remove selection\r\n        if (currentKeyKode === \"ctrl\") {\r\n          this.lastKeyKodeUsed = currentKeyKode;\r\n          isSel = this.isSelected(currentRow);\r\n          if (isSel === true) {\r\n            this.deSelect(currentRow);\r\n          }\r\n          this.lastRowSelected = currentRow;\r\n        } else {\r\n          //else we just want to make it current..\r\n          //isSel = this.isSelected(currentRow);\r\n          this.select(currentRow);\r\n        }\r\n        //update selection on rows\r\n        vGridGenerator.updateSelectionOnAllRows();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n"]}